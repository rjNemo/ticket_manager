{"version":3,"sources":["authentication/auth0.jsx","authentication/helpers.ts","components/ButtonAppBar.tsx","constants/routes.ts","components/Footer.tsx","layouts/MainLayout.tsx","routes/PrivateRoute.jsx","components/SignInSide.tsx","pages/HomePage.tsx","controllers/HomeController.tsx","controllers/ErrorController.tsx","components/Header.tsx","components/Avatars/AvatarList.tsx","components/Progress/ProgressBar.tsx","components/Buttons/FloatingButton.tsx","components/FilterBar.tsx","components/Modals/Modal.tsx","services/http.ts","services/project.ts","services/ticket.ts","services/user.ts","components/Modals/UsersModal.tsx","components/Cards/HorizontalCard.tsx","components/Cards/TicketChipsArray.tsx","utils/methods.ts","components/Cards/TicketCard.tsx","types/enums/category.ts","types/enums/impact.ts","types/enums/difficulty.ts","components/Preloader.tsx","components/Modals/NewTicketModal.tsx","components/Lists/TicketList.tsx","components/Panels/ProjectTabPanel.tsx","components/Progress/ProgressInfo.tsx","layouts/PageLayout.tsx","pages/ProjectPage.tsx","VM/ProjectVM.ts","controllers/ProjectController.tsx","components/Avatars/UserAvatar.tsx","components/UserHeader.tsx","components/Cards/ProjectCard.tsx","components/Modals/NewProjectModal.tsx","components/Lists/ProjectList.tsx","components/Panels/UserTabPanel.tsx","pages/UserPage.tsx","VM/UserVM.ts","controllers/UserController.tsx","pages/TicketPage.tsx","VM/TicketVM.ts","controllers/TicketController.tsx","pages/NotFoundPage.tsx","pages/TestPage.tsx","routes/AppRouter.tsx","utils/history.ts","serviceWorker.ts","index.jsx","App.tsx"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","getUID","user","sub","split","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","classes","isAuthenticated","loginWithRedirect","logout","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","component","Link","to","Avatar","src","picture","onClick","copyParams","Copyright","brand","text","RouterLink","Date","getFullYear","footer","padding","marginTop","backgroundColor","palette","type","grey","Footer","Container","maxWidth","href","target","rel","display","flexDirection","minHeight","MainLayout","children","CssBaseline","PrivateRoute","Component","path","rest","loading","useEffect","a","appState","targetUrl","fn","render","props","height","image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","paper","margin","alignItems","avatar","secondary","main","form","width","submit","subTitle","SignInSide","Grid","container","item","xs","sm","md","Paper","elevation","square","noValidate","fullWidth","HomePage","uid","HomeController","ErrorController","error","Header","description","Box","marginLeft","AvatarList","users","undefined","AvatarGroup","max","map","i","id","key","alt","fullName","ProgressBar","value","LinearProgress","FloatingButton","icon","size","Fab","filter","FilterBar","filterText","handleChange","placeholder","useRouteMatch","url","TextField","label","onChange","closeButton","right","top","Modal","handleClose","show","action","handleAction","name","Dialog","open","onClose","DialogTitle","disableTypography","DialogContent","dividers","DialogActions","HttpHandler","newHeaders","token","Headers","Accept","Authorization","execute","request","fetch","response","json","parsedBody","ok","statusText","get","args","method","headers","Request","post","body","JSON","stringify","put","patch","ProjectService","http","all","add","setMembers","members","Error","TicketService","close","UserService","update","delete","background","UsersModal","allUsers","useParams","useState","setFilterText","memberIDs","u","getTokenSilently","handleSubmit","e","preventDefault","Projects","justify","clearFilterText","List","dense","ListItem","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","Checkbox","currentIndex","indexOf","newChecked","push","splice","checked","inputProps","minWidth","marginBottom","HorizontalCard","link","content","actions","progress","Card","CardContent","CardActions","justifyContent","flexWrap","listStyle","chip","TicketChipsArray","status","category","impact","difficulty","chipData","data","Chip","getRemainingdays","endDate","endingDate","today","Math","abs","getDate","toISOString","TicketCard","validateTicket","ticket","Category","Impact","Difficulty","backdrop","zIndex","drawer","Preloader","Backdrop","CircularProgress","select","NewTicketModal","allProjects","projectId","setProjectId","setTitle","setDescription","setEndingDate","categoryID","setCategoryID","impactID","setImpactID","difficultyID","setDifficultyID","setLoading","newTicket","creatorId","parseInt","catch","err","console","required","autoFocus","multiline","p","MenuItem","InputLabelProps","shrink","c","header","paddingBottom","addButton","TicketList","tickets","showNew","setShowNew","filteredTickets","t","toLowerCase","includes","handleValidate","Tickets","toString","direction","length","TabPanel","index","other","role","hidden","aria-labelledby","borderRadius","ProjectTabPanel","tabNames","files","useTheme","setValue","style","borderTopLeftRadius","borderTopRightRadius","Tabs","event","newValue","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","ProgressInfo","tasksDone","tasksTotalCount","remainingDays","PlaylistAddCheck","paddingTop","PageLayout","ProjectPage","viewModel","progression","ticketsDone","ticketsTotalCount","showModal","setShowModal","ProjectVM","project","creationDate","manager","activities","this","ProjectController","setProject","setAllUsers","setAllProjects","isLoading","setIsLoading","hasError","setHasError","setError","getProject","getAllUsers","Users","getAllProjects","Promise","then","ex","small","large","UserAvatar","UserHeader","presentation","ProjectCard","ticketsNumber","NewProjectModal","newProject","managerId","ProjectList","projects","filteredProjects","topbar","UserTabPanel","UserPage","UserVM","firstName","lastName","email","phone","UserController","account","setAccount","given_name","family_name","nickname","newUser","now","toLocaleString","getUser","table","subtitle","TicketPage","daysToEnd","Timer","TicketVM","TicketController","setTicket","getTicket","NotFoundPage","TestPage","showResult","setShowResult","apiMessage","setApiMessage","setUser","callAPI","log","AppRouter","exact","createHistory","Boolean","hostname","match","ReactDOM","onRedirectCallback","initOptions","setIsAuthenticated","auth0Client","setAuth0","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","handleRedirectCallback","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","getTokenWithPopup","domain","config","client_id","clientId","audience","redirect_uri","origin","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2d8aca08.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","/**\n * retrieve userId\n * @param user Auth0 user object\n */\nexport const getUID = (user: any) => {\n  const { sub } = user;\n  const uid = sub.split(\"|\")[1];\n  return uid;\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Toolbar,\n  Typography,\n  Avatar,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport * as ROUTES from \"../constants/routes\";\nimport { useAuth0 } from \"../authentication/auth0\";\nimport { getUID } from \"../authentication/helpers\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Button color=\"inherit\" component={Link} to={ROUTES.HOME}>\n              BugBuster\n            </Button>\n          </Typography>\n          {!isAuthenticated ? (\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={() => loginWithRedirect({})}\n            >\n              Log in\n            </Button>\n          ) : (\n            <>\n              <Button\n                color=\"inherit\"\n                component={Link}\n                to={`${ROUTES.USERS}/${getUID(user)}`}\n              >\n                <Avatar src={user.picture} />\n              </Button>\n              <Button color=\"inherit\" onClick={() => logout()}>\n                Log out\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","export const HOME: string = \"/\";\nexport const PROJECTS: string = \"/projects\";\nexport const TICKETS: string = \"/tickets\";\nexport const USERS: string = \"/users\";\nexport const SIGN_IN: string = \"/signin\";\nexport const NOT_FOUND: string = \"/404\";\nexport const TEST: string = \"/test\";\n","import React, { FC } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Container, Typography, Link } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {\n  brand: string;\n  text: string;\n}\n\nconst copyParams: IProps = {\n  brand: \"BugBuster\",\n  text: \"Made with 🔥\",\n};\n\nconst Copyright: FC<IProps> = ({ brand, text }) => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"© \"}\n      <Link color=\"inherit\" component={RouterLink} to=\"/\">\n        {brand}\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {`. All Rights Reserved. ${text}`}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"body1\">\n          <Link\n            color=\"inherit\"\n            href=\"https://github.com/rjNemo\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            Ruidy Nemausat\n          </Link>{\" \"}\n        </Typography>\n        <Copyright brand={copyParams.brand} text={copyParams.text} />\n      </Container>\n    </footer>\n  );\n}\n","import React, { FC } from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ButtonAppBar from \"../components/ButtonAppBar\";\nimport Footer from \"../components/Footer\";\n\n/**\n * @function useStyles creates the css styles used in the following component.\n */\nconst useStyles = makeStyles((theme) => ({\n  // root style allow for fixed footer\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n    backgroundColor: \"#f8f9fa\",\n  },\n}));\n\n/**\n * MainLayout is the principal page layout. It mainly ensure the footer is fixed\n * to the page bottom.\n *\n * @param children - The encapsulated component.\n */\nconst MainLayout: FC = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <header>\n        <ButtonAppBar />\n      </header>\n      {/* <BreadCrumb /> */}\n      <CssBaseline />\n      {children}\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../authentication/auth0\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: { targetUrl: window.location.pathname },\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = (props) =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { useAuth0 } from \"../authentication/auth0\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: \"90vh\",\n    },\n    image: {\n      backgroundImage: \"url(https://source.unsplash.com/daily?dev)\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundColor:\n        theme.palette.type === \"light\"\n          ? theme.palette.grey[50]\n          : theme.palette.grey[900],\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n    },\n    paper: {\n      margin: theme.spacing(8, 4),\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\",\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n    subTitle: {\n      margin: theme.spacing(3, 0),\n    },\n  })\n);\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const { loginWithRedirect } = useAuth0();\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h3\">\n            BugBuster\n          </Typography>\n          <Typography component=\"h2\" variant=\"h5\" className={classes.subTitle}>\n            Catch any Bugs on the Fly\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n              onClick={() => loginWithRedirect({})}\n            >\n              Get Started\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { FC } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SignInSide from \"../components/SignInSide\";\nimport { useAuth0 } from \"../authentication/auth0\";\nimport { getUID } from \"../authentication/helpers\";\nimport * as ROUTES from \"../constants/routes\";\n\nconst HomePage: FC = () => {\n  const { isAuthenticated, user } = useAuth0();\n\n  if (isAuthenticated) {\n    // retrieve userId\n    const uid = getUID(user);\n    return <Redirect to={`${ROUTES.USERS}/${uid}`} />;\n  } else {\n    return <SignInSide />;\n  }\n};\n\nexport default HomePage;\n","import React, { FC } from \"react\";\nimport HomePage from \"../pages/HomePage\";\n\nconst HomeController: FC = () => {\n  return <HomePage />;\n};\n\nexport default HomeController;\n","import React, { FC } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface IProps {\n  error: string;\n}\n\nconst ErrorController: FC<IProps> = ({ error }) => {\n  switch (error) {\n    case \"Bad Request\":\n      return <Redirect to=\"/400\" />;\n\n    case \"Unauthorized\":\n      return <Redirect to=\"/401\" />;\n\n    case \"Not Found\":\n      return <Redirect to=\"/404\" />;\n\n    default:\n      return <Redirect to=\"/404\" />;\n  }\n};\n\nexport default ErrorController;\n","import React, { FC } from \"react\";\nimport { Typography, Box } from \"@material-ui/core\";\n\ntype HeaderProps = {\n  title: string;\n  description: string;\n};\n\nconst Header: FC<HeaderProps> = ({ title, description }) => {\n  return (\n    <Box>\n      <Typography variant=\"h2\" component=\"h2\">\n        {title}\n      </Typography>\n      <Typography variant=\"subtitle2\" component=\"h3\">\n        {description}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, Theme, createStyles, Avatar } from \"@material-ui/core\";\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\nimport User from \"../../types/User\";\n\ninterface AvatarListProps {\n  users: User[];\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2),\n    },\n  })\n);\n\nexport const AvatarList: FC<AvatarListProps> = ({ users }) => {\n  const classes = useStyles();\n  return users === undefined ? (\n    <></>\n  ) : (\n    <div className={classes.root}>\n      <AvatarGroup max={5}>\n        {users.map((user: User, i: number) => (\n          <Link to={`/users/${user.id}`} key={i}>\n            <Avatar src={user.picture} alt={user.fullName} />\n          </Link>\n        ))}\n      </AvatarGroup>\n    </div>\n  );\n};\n\nexport default AvatarList;\n","import React, { FC } from \"react\";\nimport { Box, LinearProgress } from \"@material-ui/core\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\ntype IProps = {\n  value: number;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      \"& > * + *\": {\n        marginTop: theme.spacing(2),\n      },\n    },\n  })\n);\n\nconst ProgressBar: FC<IProps> = ({ value }) => {\n  // const styleString: CSSProperties = { width: `${value}%` };\n  // let barColor: string = \"green\";\n\n  // if (value < 100) {\n  //   barColor = \"yellow\";\n  // }\n  // if (value < 200 / 3) {\n  //   barColor = \"orange\";\n  // }\n  // if (value < 100 / 3) {\n  //   barColor = \"red\";\n  // }\n\n  const classes = useStyles();\n\n  return (\n    <Box className=\"row\">\n      <div className={classes.root}>\n        <LinearProgress variant=\"determinate\" value={value} />\n        {/* <LinearProgress variant=\"determinate\" value={value} color={barColor} /> */}\n      </div>\n    </Box>\n  );\n};\n\nexport default ProgressBar;\n","import React, { FC, MouseEvent } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\ninterface IProps {\n  icon?: string;\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\n  onClick?: (e: MouseEvent) => void;\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\n  text?: string;\n}\n\nconst FloatingButton: FC<IProps> = ({ color, icon, size, text, onClick }) => {\n  return (\n    <Fab color={color} aria-label={icon} size={size} onClick={onClick}>\n      <AddIcon />\n      {text}\n    </Fab>\n  );\n};\n\nexport default FloatingButton;\n","import React, { FC, ChangeEvent, MouseEvent } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Grid, TextField } from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\ntype IProps = {\n  filterText: string;\n  handleChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  clearFilterText: (e: MouseEvent<HTMLInputElement>) => void;\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1),\n        width: \"25ch\",\n      },\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    filter: {\n      backgroundColor: \"#fff\",\n    },\n  })\n);\n\nconst FilterBar: FC<IProps> = ({\n  filterText,\n  handleChange,\n  // clearFilterText\n}) => {\n  const { url } = useRouteMatch();\n  const placeholder: string = url.split(\"/\")[3] || \"elements\";\n  const classes = useStyles();\n  return (\n    <div className={classes.margin}>\n      <Grid container spacing={1} alignItems=\"flex-end\">\n        <Grid item>\n          <TextField\n            id=\"input-with-icon-grid\"\n            variant=\"outlined\"\n            label={`Filter ${placeholder}`}\n            size=\"small\"\n            value={filterText}\n            onChange={handleChange}\n            color=\"primary\"\n            className={classes.filter}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default FilterBar;\n","import React, { FC } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  Typography,\n  IconButton,\n  DialogContent,\n  makeStyles,\n  Theme,\n  createStyles,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\ninterface IProps {\n  handleClose: () => void;\n  show: boolean;\n  action: string;\n  handleAction: (e: React.FormEvent) => Promise<void>;\n  name: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  })\n);\n\nconst Modal: FC<IProps> = ({\n  handleClose,\n  show,\n  action,\n  handleAction,\n  children,\n  name,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={show}\n      onClose={handleClose}\n      maxWidth=\"md\"\n      // fullWidth\n    >\n      <DialogTitle disableTypography className={classes.root}>\n        <Typography variant=\"h6\">{name}</Typography>\n        {handleClose ? (\n          <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </DialogTitle>\n      <DialogContent dividers>{children}</DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleAction} color=\"primary\">\n          {action}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default Modal;\n","import HttpResponse from \"../types/HttpResponse\";\n\nexport default class HttpHandler<T> {\n  private newHeaders = async (token: string) => {\n    // const { getTokenSilently } = useAuth0();\n    // const token = await getTokenSilently();\n\n    return new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    });\n  };\n\n  private execute = async (request: RequestInfo): Promise<HttpResponse<T>> => {\n    const response: HttpResponse<T> = await fetch(request);\n    try {\n      response.parsedBody = await response.json();\n    } catch (ex) {}\n    if (!response.ok) {\n      throw response.statusText;\n    }\n    return response;\n  };\n\n  get = async (path: string, token: string): Promise<HttpResponse<T>> => {\n    const args: RequestInit = {\n      method: \"get\",\n      headers: await this.newHeaders(token),\n    };\n    return await this.execute(new Request(path, args));\n  };\n\n  post = async (\n    path: string,\n    body: any,\n    token: string\n  ): Promise<HttpResponse<T>> => {\n    const args: RequestInit = {\n      method: \"post\",\n      headers: await this.newHeaders(token),\n      body: JSON.stringify(body),\n    };\n    return await this.execute(new Request(path, args));\n  };\n\n  put = async (\n    path: string,\n    body: any,\n    token: string\n  ): Promise<HttpResponse<T>> => {\n    const args: RequestInit = {\n      method: \"put\",\n      headers: await this.newHeaders(token),\n      body: JSON.stringify(body),\n    };\n    return await this.execute(new Request(path, args));\n  };\n\n  patch = async (\n    path: string,\n    body: any,\n    token: string\n  ): Promise<HttpResponse<T>> => {\n    const args: RequestInit = {\n      method: \"patch\",\n      headers: await this.newHeaders(token),\n      body: JSON.stringify(body),\n    };\n    return await this.execute(new Request(path, args));\n  };\n}\n","import IService from \".\";\nimport Project from \"../types/Project\";\nimport HttpHandler from \"./http\";\n\ninterface NewProject {\n  title: string;\n  description: string;\n  endingDate: string;\n  managerId: string;\n}\nexport default class ProjectService implements IService<Project> {\n  constructor(private key: string) {}\n\n  private http = new HttpHandler<Project>();\n  private path: string = \"/api/v1/projects\";\n\n  all = async (): Promise<Project[]> => {\n    const response = await this.http.get(this.path, this.key);\n    return (response.parsedBody as unknown) as Project[];\n  };\n\n  get = async (id: string): Promise<Project> => {\n    const response = await this.http.get(`${this.path}/${id}`, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as Project);\n  };\n\n  add = async (item: NewProject): Promise<Project> => {\n    const response = await this.http.post(this.path, item, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as Project);\n  };\n\n  update(id: string, item: Project): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  delete(id: string): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  setMembers = async (id: string, members: string[]): Promise<void> => {\n    await this.http.patch(`${this.path}/${id}/members`, members, this.key);\n  };\n}\n","import IService from \".\";\nimport Ticket from \"../types/Ticket\";\nimport HttpHandler from \"./http\";\n\ninterface NewTicket {\n  title: string;\n  description: string;\n  endingDate: string;\n  creatorId: string;\n  projectId: number;\n  impact: number;\n  difficulty: number;\n  category: number;\n}\n\nexport default class TicketService implements IService<Ticket> {\n  constructor(private key: string) {}\n\n  private http = new HttpHandler<Ticket>();\n  private path: string = \"/api/v1/tickets\";\n\n  all = async (): Promise<Ticket[]> => {\n    const response = await this.http.get(this.path, this.key);\n    return (response.parsedBody as unknown) as Ticket[];\n  };\n\n  get = async (id: string): Promise<Ticket> => {\n    const response = await this.http.get(`${this.path}/${id}`, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as Ticket);\n  };\n\n  add = async (item: NewTicket): Promise<Ticket> => {\n    const response = await this.http.post(this.path, item, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as Ticket);\n  };\n\n  update(id: string, item: Ticket): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  delete(id: string): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  close = async (id: string): Promise<void> => {\n    await this.http.put(`${this.path}/${id}/closed`, {}, this.key);\n  };\n}\n","import IService from \".\";\nimport User from \"../types/User\";\nimport HttpHandler from \"./http\";\n\nexport default class UserService implements IService<User> {\n  constructor(private key: string) {}\n\n  private http = new HttpHandler<User>();\n  private path: string = \"/api/v1/users\";\n\n  all = async (): Promise<User[]> => {\n    const response = await this.http.get(this.path, this.key);\n    return (response.parsedBody as unknown) as User[];\n  };\n\n  get = async (id: string): Promise<User> => {\n    const response = await this.http.get(`${this.path}/${id}`, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as User);\n  };\n\n  add = async (item: User): Promise<User> => {\n    const response = await this.http.post(this.path, item, this.key);\n    const body = response.parsedBody;\n    return body ?? ({} as User);\n  };\n\n  update = async (id: string, item: User): Promise<void> => {\n    throw new Error(\"Method not implemented.\");\n  };\n\n  delete = async (id: string): Promise<void> => {\n    throw new Error(\"Method not implemented.\");\n  };\n}\n","import React, { FC, useState, ChangeEvent, FormEvent } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Avatar,\n  Checkbox,\n  Grid,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListItemAvatar,\n} from \"@material-ui/core\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport AvatarList from \"../Avatars/AvatarList\";\nimport FilterBar from \"../FilterBar\";\nimport Modal from \"./Modal\";\nimport User from \"../../types/User\";\nimport { ProjectService } from \"../../services\";\nimport { useAuth0 } from \"../../authentication/auth0\";\n\ninterface IProps {\n  show: boolean;\n  users: User[];\n  allUsers: User[];\n  handleClose(): void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  })\n);\n\nconst UsersModal: FC<IProps> = ({ show, handleClose, users, allUsers }) => {\n  const { id } = useParams();\n\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFilterText(e.target.value);\n  };\n\n  const memberIDs = users.map((u) => u.id);\n  const [members, setMembers] = useState<string[]>(memberIDs);\n\n  const handleToggle = (value: string) => () => {\n    const currentIndex = members.indexOf(value);\n    const newChecked = [...members];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setMembers(newChecked);\n  };\n\n  const { getTokenSilently } = useAuth0();\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    if (id !== undefined) {\n      const token = await getTokenSilently();\n      const Projects = new ProjectService(token);\n      await Projects.setMembers(id, members);\n    }\n    handleClose();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Modal\n      name=\"Manage Users\"\n      show={show}\n      handleClose={handleClose}\n      action=\"Submit\"\n      handleAction={handleSubmit}\n    >\n      <Grid container justify=\"center\">\n        <AvatarList users={users} />\n        <FilterBar\n          filterText={filterText}\n          clearFilterText={() => setFilterText(\"\")}\n          handleChange={handleChange}\n        />\n      </Grid>\n      <Grid container justify=\"center\">\n        <List dense className={classes.root}>\n          {allUsers.map((u: User) => (\n            <ListItem key={u.id}>\n              <ListItemAvatar>\n                <Avatar alt={u.fullName} src={u.picture} />\n              </ListItemAvatar>\n              <ListItemText id={u.id} primary={u.fullName} />\n              <ListItemSecondaryAction>\n                <Checkbox\n                  edge=\"end\"\n                  onChange={handleToggle(u.id)}\n                  checked={members.indexOf(u.id) !== -1}\n                  inputProps={{ \"aria-labelledby\": `checkbox-${u.id}` }}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n    </Modal>\n  );\n};\n\nexport default UsersModal;\n","import React, { FC, ReactNode } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  Typography,\n  Link,\n} from \"@material-ui/core\";\nimport ProgressBar from \"../Progress/ProgressBar\";\n\ninterface IProps {\n  title?: string;\n  link?: string;\n  progress?: number;\n  content: ReactNode;\n  actions?: ReactNode;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 20,\n  },\n});\n\nconst HorizontalCard: FC<IProps> = ({\n  title,\n  link = \"#\",\n  content,\n  actions,\n  progress = 0,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <ProgressBar value={progress} />\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          <Link color=\"primary\" component={RouterLink} to={link}>\n            <b>{title ?? \"Nothing to do\"}</b>\n          </Link>\n        </Typography>\n        {content}\n      </CardContent>\n      <CardActions>{actions}</CardActions>\n    </Card>\n  );\n};\n\nexport default HorizontalCard;\n","import React, { FC } from \"react\";\nimport { Grid, Chip, makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport CategoryIcon from \"@material-ui/icons/Category\";\nimport PriorityHighIcon from \"@material-ui/icons/PriorityHigh\";\nimport SpeedIcon from \"@material-ui/icons/Speed\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      flexWrap: \"wrap\",\n      listStyle: \"none\",\n      padding: theme.spacing(0.5),\n      margin: 0,\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    chip: {\n      margin: theme.spacing(0.5),\n    },\n  })\n);\n\ninterface IProps {\n  status: string;\n  category: string;\n  impact: string;\n  difficulty: string;\n}\nconst TicketChipsArray: FC<IProps> = ({\n  status,\n  category,\n  impact,\n  difficulty,\n}) => {\n  const classes = useStyles();\n  const chipData = [\n    // { label: \"status\", value: status },\n    { label: \"category\", value: category },\n    { label: \"impact\", value: impact },\n    { label: \"difficulty\", value: difficulty },\n  ];\n\n  return (\n    // <Paper component=\"ul\" className={classes.root}>\n    <Grid component=\"ul\" className={classes.root}>\n      {chipData.map((data, i: number) => {\n        let icon = <CategoryIcon />;\n        let color: \"inherit\" | \"default\" | \"primary\" | \"secondary\" | undefined;\n\n        if (data.label === \"impact\") {\n          color = \"primary\";\n          icon = <PriorityHighIcon />;\n        }\n        if (data.label === \"difficulty\") {\n          color = \"secondary\";\n          icon = <SpeedIcon />;\n        }\n\n        return (\n          <li key={i}>\n            <Chip\n              icon={icon}\n              color={color}\n              label={data.value}\n              className={classes.chip}\n            />\n          </li>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default TicketChipsArray;\n","const getRemainingdays: (endDate: string) => number = (endDate: string) => {\n  let endingDate: Date = new Date(endDate);\n  let today: Date = new Date();\n  return Math.abs(endingDate.getDate() - today.getDate());\n};\n\nexport default getRemainingdays;\n\n/**\n * get today date\n */\nexport const today = (): string => new Date().toISOString().split(\"T\")[0];\n","import React, { FC, MouseEvent } from \"react\";\nimport { Button, Typography, Grid } from \"@material-ui/core\";\nimport HorizontalCard from \"./HorizontalCard\";\nimport TicketChipsArray from \"./TicketChipsArray\";\nimport Ticket from \"../../types/Ticket\";\nimport getRemainingdays from \"../../utils/methods\";\n\ninterface IProps {\n  ticket?: Ticket;\n  validateTicket?: (event: MouseEvent) => void;\n  link?: string;\n}\n\nconst TicketCard: FC<IProps> = ({\n  link = \"#\",\n  validateTicket,\n  ticket = {} as Ticket,\n}) => {\n  const Content: FC = () => {\n    return (\n      <Grid container justify=\"space-between\" alignItems=\"center\">\n        <TicketChipsArray\n          status={ticket.status}\n          category={ticket.category}\n          impact={ticket.impact}\n          difficulty={ticket.difficulty}\n        />\n        <Typography variant=\"body2\" component=\"p\">\n          <span>\n            Due in{\" \"}\n            {ticket?.endingDate ? (\n              getRemainingdays(ticket?.endingDate)\n            ) : (\n              <span>\n                <del>Too much</del> 0\n              </span>\n            )}{\" \"}\n            days\n          </span>\n        </Typography>\n      </Grid>\n    );\n  };\n\n  const Action = () => {\n    return (\n      <>\n        <Button size=\"small\" onClick={validateTicket}>\n          Mark as done\n        </Button>\n      </>\n    );\n  };\n\n  return (\n    <HorizontalCard\n      title={ticket?.title}\n      link={link}\n      content={<Content />}\n      actions={<Action />}\n    />\n  );\n};\n\nexport default TicketCard;\n","const Category: string[] = [\"Product\", \"Tech\", \"Design\", \"Marketing\", \"Test\"];\n\nexport default Category;\n","const Impact: string[] = [\"High\", \"Medium\", \"Low\"];\n\nexport default Impact;\n","const Difficulty: string[] = [\"Easy\", \"Medium\", \"Hard\"];\n\nexport default Difficulty;\n","import React, { FC } from \"react\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: \"#fff\",\n    },\n  })\n);\n\nconst Preloader: FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.backdrop} open={true}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default Preloader;\n","import React, { FC, useState, FormEvent } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport {\n  TextField,\n  MenuItem,\n  Grid,\n  makeStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport Modal from \"./Modal\";\nimport Project from \"../../types/Project\";\nimport Category from \"../../types/enums/category\";\nimport Impact from \"../../types/enums/impact\";\nimport Difficulty from \"../../types/enums/difficulty\";\nimport { TicketService } from \"../../services\";\nimport { useAuth0 } from \"../../authentication/auth0\";\nimport { getUID } from \"../../authentication/helpers\";\nimport { today } from \"../../utils/methods\";\nimport Preloader from \"../Preloader\";\n\ninterface IProps {\n  show: boolean;\n  handleClose: () => void;\n  allProjects: Project[];\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  select: {\n    width: 120,\n  },\n}));\n\nconst NewTicketModal: FC<IProps> = ({ show, handleClose, allProjects }) => {\n  const { getTokenSilently, user } = useAuth0();\n  const { url } = useRouteMatch();\n  const id = url.split(\"/\")[2];\n  const [projectId, setProjectId] = useState(id);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [endingDate, setEndingDate] = useState(today());\n  const [categoryID, setCategoryID] = useState(1);\n  const [impactID, setImpactID] = useState(1);\n  const [difficultyID, setDifficultyID] = useState(1);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    let newTicket = {\n      title: title,\n      description: description,\n      endingDate: new Date(endingDate).toISOString(),\n      creatorId: getUID(user),\n      projectId: parseInt(projectId),\n      impact: impactID,\n      difficulty: difficultyID,\n      category: categoryID,\n    };\n\n    const token = await getTokenSilently();\n    const Tickets = new TicketService(token);\n    Tickets.add(newTicket).catch((err) => console.error(err));\n    setLoading(false);\n    setTitle(\"\");\n    setDescription(\"\");\n    setEndingDate(today());\n    setCategoryID(1);\n    setImpactID(1);\n    setDifficultyID(1);\n    handleClose();\n  };\n\n  const classes = useStyles();\n  return loading ? (\n    <Preloader />\n  ) : (\n    <Modal\n      name=\"New Ticket\"\n      show={show}\n      handleClose={handleClose}\n      action=\"New Ticket\"\n      handleAction={handleSubmit}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"title\"\n        value={title}\n        label=\"Title\"\n        name=\"text\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setTitle(e.target.value)\n        }\n        autoFocus\n      />\n\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"description\"\n        value={description}\n        label=\"Description\"\n        name=\"text\"\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          setDescription(e.target.value)\n        }\n        multiline\n      />\n\n      <TextField\n        id=\"project\"\n        name=\"project\"\n        select\n        fullWidth\n        required\n        label=\"Project\"\n        value={projectId}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          e.preventDefault();\n          setProjectId(e.target.value);\n        }}\n        // helperText=\"Please select your currency\"\n        variant=\"outlined\"\n        margin=\"normal\"\n      >\n        {allProjects.map((p) => (\n          <MenuItem key={p.id} value={p.id}>\n            {p.title}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      <TextField\n        id=\"date\"\n        name=\"date\"\n        label=\"Due Date\"\n        type=\"date\"\n        margin=\"normal\"\n        fullWidth\n        // defaultValue={new Date().toISOString()}\n        // className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n        required\n        value={endingDate}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setEndingDate(e.target.value)\n        }\n      />\n\n      <Grid container justify=\"space-between\">\n        <TextField\n          id=\"category\"\n          name=\"category\"\n          select\n          label=\"Category\"\n          value={categoryID}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            e.preventDefault();\n            setCategoryID(parseInt(e.target.value));\n          }}\n          variant=\"outlined\"\n          margin=\"normal\"\n          className={classes.select}\n        >\n          {Category.map((c: string, i: number) => (\n            <MenuItem key={i} value={i + 1}>\n              {c}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          className={classes.select}\n          id=\"impact\"\n          name=\"impact\"\n          select\n          label=\"Impact\"\n          value={impactID}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            e.preventDefault();\n            setImpactID(parseInt(e.target.value));\n          }}\n          variant=\"outlined\"\n          margin=\"normal\"\n        >\n          {Impact.map((c: string, i: number) => (\n            <MenuItem key={i} value={i + 1}>\n              {c}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          className={classes.select}\n          id=\"difficulty\"\n          name=\"difficulty\"\n          select\n          label=\"Difficulty\"\n          value={difficultyID}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            e.preventDefault();\n            setDifficultyID(parseInt(e.target.value));\n          }}\n          variant=\"outlined\"\n          margin=\"normal\"\n        >\n          {Difficulty.map((c: string, i: number) => (\n            <MenuItem key={i} value={i + 1}>\n              {c}\n            </MenuItem>\n          ))}\n        </TextField>\n      </Grid>\n    </Modal>\n  );\n};\n\nexport default NewTicketModal;\n","import React, { FC, useState, ChangeEvent, MouseEvent } from \"react\";\nimport {\n  Grid,\n  Typography,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core\";\nimport FloatingButton from \"../Buttons/FloatingButton\";\nimport FilterBar from \"../FilterBar\";\nimport TicketCard from \"../Cards/TicketCard\";\nimport NewTicketModal from \"../Modals/NewTicketModal\";\nimport Ticket from \"../../types/Ticket\";\nimport Project from \"../../types/Project\";\nimport { useAuth0 } from \"../../authentication/auth0\";\nimport { TicketService } from \"../../services\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      paddingBottom: theme.spacing(2),\n    },\n    addButton: {\n      position: \"relative\",\n      marginLeft: \"20px\",\n    },\n  })\n);\n\ntype TicketListProps = {\n  tickets: Ticket[];\n  allProjects: Project[];\n  addButton?: Boolean;\n};\n\nconst TicketList: FC<TicketListProps> = ({\n  tickets,\n  allProjects,\n  addButton = true,\n}) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const clearFilterText = (e: MouseEvent): void => {\n    setFilterText(\"\");\n  };\n\n  const onClick = (e: MouseEvent): void => {\n    e.preventDefault();\n    setShowNew(true);\n  };\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFilterText(e.target.value);\n  };\n\n  const [showNew, setShowNew] = useState(false);\n\n  let filteredTickets = tickets.filter(\n    (t) =>\n      t.status !== \"Done\" &&\n      t.title.toLowerCase().includes(filterText.toLowerCase())\n  );\n\n  const { getTokenSilently } = useAuth0();\n\n  const handleValidate = async (id: number) => {\n    const token = await getTokenSilently();\n    const Tickets = new TicketService(token);\n    await Tickets.close(id.toString());\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <NewTicketModal\n        handleClose={() => {\n          setShowNew(false);\n        }}\n        show={showNew}\n        allProjects={allProjects}\n      />\n\n      <Grid container>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          className={classes.header}\n        >\n          <Typography variant=\"h4\" component=\"h4\">\n            Tickets\n            {addButton && (\n              <span className={classes.addButton}>\n                <FloatingButton\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={onClick}\n                />\n              </span>\n            )}\n          </Typography>\n\n          <FilterBar\n            filterText={filterText}\n            handleChange={handleChange}\n            clearFilterText={clearFilterText}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          {filteredTickets.length === 0 ? (\n            <TicketCard />\n          ) : (\n            filteredTickets.map((t: Ticket) => (\n              <TicketCard\n                key={t.id}\n                ticket={t}\n                link={`/tickets/${t.id}`}\n                validateTicket={() => {\n                  handleValidate(t.id);\n                }}\n              />\n            ))\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TicketList;\n","import React, { FC, useState, ReactNode } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport { AppBar, Box, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport Ticket from \"../../types/Ticket\";\nimport Project from \"../../types/Project\";\nimport TicketList from \"../Lists/TicketList\";\nimport AppFile from \"../../types/AppFile\";\n\ninterface TabProps {\n  children?: ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nconst TabPanel: FC<TabProps> = (props: TabProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n};\n\nconst a11yProps = (index: any) => {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: \"#E9ECEF\",\n    borderRadius: \"20px\",\n  },\n}));\n\ninterface IProps {\n  tickets: Ticket[];\n  remainingDays?: number;\n  tabNames: string[];\n  files: AppFile[];\n  // activities: Activity[];\n  allProjects: Project[];\n}\n\nconst ProjectTabPanel: FC<IProps> = ({\n  tickets,\n  tabNames,\n  files,\n  allProjects,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        color=\"inherit\"\n        style={{ borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\" }}\n      >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs\"\n        >\n          {tabNames.map((t: string, i: number) => (\n            <Tab key={i} label={t} {...a11yProps({ i })} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <TicketList\n            tickets={tickets}\n            allProjects={allProjects}\n            addButton={true}\n          />\n        </TabPanel>\n        {/* <TabPanel value={value} index={1} dir={theme.direction}>\n          <FileList files={files} />\n        </TabPanel> */}\n      </SwipeableViews>\n    </div>\n  );\n};\n\nexport default ProjectTabPanel;\n","import React, { FC } from \"react\";\n// import { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport { Box } from \"@material-ui/core\";\nimport { PlaylistAddCheck } from \"@material-ui/icons\";\n\ntype IProps = {\n  tasksTotalCount?: number;\n  tasksDone?: number;\n  remainingDays?: number;\n};\n\n// const useStyles = makeStyles((theme: Theme) =>\n//   createStyles({\n//     root: {\n//       width: \"100%\",\n//       \"& > * + *\": {\n//         marginTop: theme.spacing(2),\n//       },\n//     },\n//   })\n// );\n\nconst ProgressInfo: FC<IProps> = ({\n  tasksDone,\n  tasksTotalCount,\n  remainingDays,\n}) => {\n  // const classes = useStyles();\n\n  return (\n    <Box>\n      <PlaylistAddCheck />\n      <span>\n        {tasksDone}/{tasksTotalCount}\n      </span>\n      <Box className=\"right\">\n        <span>Due in {remainingDays} days</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProgressInfo;\n","import React, { FC, ReactNode } from \"react\";\nimport { makeStyles, Theme, Container } from \"@material-ui/core\";\n\n/**\n * @function useStyles creates the css styles used in the following component.\n */\nconst useStyles = makeStyles((theme: Theme) => ({\n  // root style allow for fixed footer\n  header: {\n    margin: theme.spacing(1),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    flexGrow: 1,\n  },\n  content: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\ninterface IProps {\n  header: ReactNode;\n  content: ReactNode;\n}\n\n/**\n * PageLayout divide the page in 2 parts: Header and Content, to ensure cohesion.\n *\n * @param Header - The encapsulated component.\n * @param Content - The encapsulated component.\n */\nconst PageLayout: FC<IProps> = ({ header, content }) => {\n  const classes = useStyles();\n  return (\n    <Container maxWidth=\"md\">\n      <div className={classes.header}>{header}</div>\n      <div className={classes.content}>{content}</div>\n    </Container>\n  );\n};\n\nexport default PageLayout;\n","import React, { FC, useState } from \"react\";\nimport { Grid, makeStyles, Theme } from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport AvatarList from \"../components/Avatars/AvatarList\";\nimport ProgressBar from \"../components/Progress/ProgressBar\";\nimport FloatingButton from \"../components/Buttons/FloatingButton\";\nimport UsersModal from \"../components/Modals/UsersModal\";\nimport ProjectTabPanel from \"../components/Panels/ProjectTabPanel\";\nimport ProgressInfo from \"../components/Progress/ProgressInfo\";\nimport ProjectVM from \"../VM/ProjectVM\";\nimport PageLayout from \"../layouts/PageLayout\";\n\ninterface IProps {\n  viewModel: ProjectVM;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    flexGrow: 1,\n  },\n}));\n\nconst ProjectPage: FC<IProps> = ({ viewModel }) => {\n  const {\n    // id,\n    title,\n    description,\n    users,\n    allUsers,\n    progression,\n    tickets,\n    ticketsDone,\n    ticketsTotalCount,\n    remainingDays,\n    files,\n    // activities,\n    allProjects,\n  } = viewModel;\n\n  const tabNames: string[] = [\"Tickets\"]; //, \"Files\", \"Activity\"];\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  const classes = useStyles();\n\n  const Content: FC = () => {\n    return (\n      <>\n        <UsersModal\n          show={showModal}\n          users={users}\n          allUsers={allUsers}\n          handleClose={() => setShowModal(false)}\n        />\n\n        <Grid container>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n          >\n            <AvatarList users={users} />\n            <FloatingButton\n              icon=\"add\"\n              color=\"default\"\n              size=\"small\"\n              onClick={() => setShowModal(true)}\n            />\n          </Grid>\n        </Grid>\n\n        <div className={classes.root}>\n          <ProgressBar value={progression} />\n          <ProgressInfo\n            tasksDone={ticketsDone}\n            tasksTotalCount={ticketsTotalCount}\n            remainingDays={remainingDays}\n          />\n        </div>\n        <ProjectTabPanel\n          tabNames={tabNames}\n          tickets={tickets}\n          files={files}\n          // activities={activities}\n          allProjects={allProjects}\n        />\n      </>\n    );\n  };\n\n  return (\n    <PageLayout\n      header={<Header title={title} description={description} />}\n      content={<Content />}\n    />\n  );\n};\n\nexport default ProjectPage;\n","import Activity from \"../types/Activity\";\nimport AppFile from \"../types/AppFile\";\nimport Project from \"../types/Project\";\nimport Ticket from \"../types/Ticket\";\nimport User from \"../types/User\";\nimport getRemainingdays from \"../utils/methods\";\n\nexport default class ProjectVM {\n  public id: number;\n  public title: string;\n  public description: string;\n  public creationDate: string;\n  public endingDate: string;\n  public progression: number;\n  public status: string;\n  public manager: User;\n  public users: User[];\n  public tickets: Ticket[];\n  public files: AppFile[];\n  public activities: Activity[];\n  public allUsers: User[];\n  public ticketsTotalCount: number;\n  public ticketsDone: number;\n  public remainingDays: number;\n  public allProjects: Project[];\n\n  public constructor(\n    project: Project,\n    allUsers: User[],\n    allProjects: Project[]\n  ) {\n    this.id = project.id;\n    this.title = project.title;\n    this.description = project.description;\n    this.creationDate = project.creationDate;\n    this.endingDate = project.endingDate;\n    this.progression = project.progression;\n    this.status = project.status;\n    this.manager = project.manager;\n    this.users = project.users;\n    this.tickets = project.tickets;\n    this.files = project.files;\n    this.activities = project.activities;\n    this.allUsers = allUsers;\n    this.ticketsTotalCount =\n      this.tickets === undefined ? 0 : this.tickets.length;\n    this.ticketsDone =\n      this.tickets === undefined\n        ? 0\n        : this.tickets.filter((t) => t.status === \"Done\").length;\n    this.remainingDays = getRemainingdays(project.endingDate);\n    this.allProjects = allProjects;\n  }\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorController from \"./ErrorController\";\nimport ProjectPage from \"../pages/ProjectPage\";\nimport ProjectVM from \"../VM/ProjectVM\";\nimport Project from \"../types/Project\";\nimport User from \"../types/User\";\nimport Preloader from \"../components/Preloader\";\nimport { ProjectService, UserService } from \"../services\";\nimport { useAuth0 } from \"../authentication/auth0\";\n\nconst ProjectController: FC = () => {\n  const [project, setProject] = useState<Project>({} as Project);\n  const [allUsers, setAllUsers] = useState<User[]>([]);\n  const [allProjects, setAllProjects] = useState<Project[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n  const { getTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const getProject = async (id: string): Promise<void> => {\n      const token = await getTokenSilently();\n      try {\n        const Projects = new ProjectService(token);\n        const project: Project = await Projects.get(id);\n        if (project !== undefined) {\n          setProject(project);\n        }\n      } catch (ex) {\n        setHasError(true);\n        setError(ex);\n      }\n    };\n\n    const getAllUsers = async (): Promise<void> => {\n      const token = await getTokenSilently();\n      try {\n        const Users = new UserService(token);\n        const response: User[] = await Users.all();\n        if (response !== undefined) {\n          setAllUsers(response);\n        }\n      } catch (ex) {\n        setHasError(true);\n        setError(ex);\n      }\n    };\n\n    const getAllProjects = async (): Promise<void> => {\n      const token = await getTokenSilently();\n      try {\n        const Projects = new ProjectService(token);\n        const response: Project[] = await Projects.all();\n        if (response !== undefined) {\n          setAllProjects(response);\n        }\n      } catch (ex) {\n        setHasError(true);\n        setError(ex);\n      }\n    };\n    if (id !== undefined) {\n      // wait for all data to be fetched\n      Promise.all([getProject(id), getAllUsers(), getAllProjects()])\n        .then(() => setIsLoading(false))\n        .catch((ex) => {\n          setHasError(true);\n          setError(ex);\n        });\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new ProjectVM(project, allUsers, allProjects);\n  return isLoading ? <Preloader /> : <ProjectPage viewModel={viewModel} />;\n};\n\nexport default ProjectController;\n","import React, { FC } from \"react\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\ninterface IProps {\n  picture: string;\n  alt: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      \"& > *\": {\n        margin: theme.spacing(1),\n      },\n    },\n    small: {\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n    },\n    large: {\n      width: theme.spacing(10),\n      height: theme.spacing(10),\n    },\n  })\n);\n\nexport const UserAvatar: FC<IProps> = ({ picture, alt }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar alt={alt} src={picture} className={classes.large} />\n    </div>\n  );\n};\n\nexport default UserAvatar;\n","import React, { FC } from \"react\";\nimport Header from \"../components/Header\";\nimport UserAvatar from \"./Avatars/UserAvatar\";\nimport {\n  Grid,\n  //  makeStyles, Theme\n} from \"@material-ui/core\";\n\ninterface IProps {\n  fullName: string;\n  presentation: string;\n  picture: string;\n}\n\n// const useStyles = makeStyles((theme: Theme) => ({\n//   root: {\n//     paddingTop: theme.spacing(2),\n//     flexGrow: 1,\n//   },\n// }));\n\nconst UserHeader: FC<IProps> = ({ fullName, presentation, picture }) => {\n  // const classes = useStyles();\n  return (\n    // <div className={classes.root}>\n    <Grid container>\n      <Grid item xs={2}>\n        <UserAvatar picture={picture} alt=\"\" />\n      </Grid>\n      <Grid item xs>\n        <Header title={fullName} description={presentation} />\n      </Grid>\n    </Grid>\n    // </div>\n  );\n};\n\nexport default UserHeader;\n","import React, { FC } from \"react\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport HorizontalCard from \"./HorizontalCard\";\nimport AvatarList from \"../Avatars/AvatarList\";\nimport ProgressInfo from \"../Progress/ProgressInfo\";\nimport User from \"../../types/User\";\nimport getRemainingdays from \"../../utils/methods\";\n\ninterface IProps {\n  title?: string;\n  remainingDays?: string;\n  link?: string;\n  members?: User[];\n  progress?: number;\n  ticketsNumber?: number;\n  ticketsDone?: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    progress: {\n      paddingTop: theme.spacing(2),\n    },\n  })\n);\n\nconst ProjectCard: FC<IProps> = ({\n  title,\n  remainingDays = \"\",\n  link = \"#\",\n  members,\n  progress = 0,\n  ticketsNumber,\n  ticketsDone,\n}) => {\n  const classes = useStyles();\n\n  const Content: FC = () => {\n    return (\n      <>\n        {members && <AvatarList users={members} />}\n        <div className={classes.progress}>\n          <ProgressInfo\n            remainingDays={getRemainingdays(remainingDays)}\n            tasksDone={ticketsDone}\n            tasksTotalCount={ticketsNumber}\n          />\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <HorizontalCard\n      title={title}\n      link={link}\n      content={<Content />}\n      progress={progress}\n    />\n  );\n};\n\nexport default ProjectCard;\n","import React, { FC, useState, FormEvent } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Modal from \"./Modal\";\nimport Preloader from \"../Preloader\";\nimport { useAuth0 } from \"../../authentication/auth0\";\nimport { ProjectService } from \"../../services\";\nimport { getUID } from \"../../authentication/helpers\";\nimport { today } from \"../../utils/methods\";\n\ninterface IProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst NewProjectModal: FC<IProps> = ({ show, handleClose }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [endingDate, setEndingDate] = useState(today());\n  const [loading, setLoading] = useState(false);\n  const { getTokenSilently, user } = useAuth0();\n\n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    let newProject = {\n      title: title,\n      description: description,\n      endingDate: new Date(endingDate).toISOString(),\n      managerId: getUID(user),\n    };\n\n    const token = await getTokenSilently();\n    const Projects = new ProjectService(token);\n    Projects.add(newProject).catch((err) => console.error(err));\n    setLoading(false);\n    setTitle(\"\");\n    setDescription(\"\");\n    setEndingDate(today());\n\n    handleClose();\n  };\n\n  return loading ? (\n    <Preloader />\n  ) : (\n    <Modal\n      name=\"New Project\"\n      show={show}\n      handleClose={handleClose}\n      action=\"New Project\"\n      handleAction={handleSubmit}\n    >\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"title\"\n        value={title}\n        label=\"Title\"\n        name=\"text\"\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setTitle(e.target.value)\n        }\n        autoFocus\n      />\n\n      <TextField\n        variant=\"outlined\"\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"description\"\n        value={description}\n        label=\"Description\"\n        name=\"text\"\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          setDescription(e.target.value)\n        }\n        multiline\n      />\n\n      <TextField\n        id=\"date\"\n        name=\"date\"\n        label=\"Due Date\"\n        type=\"date\"\n        margin=\"normal\"\n        fullWidth\n        InputLabelProps={{\n          shrink: true,\n        }}\n        variant=\"outlined\"\n        required\n        value={endingDate}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setEndingDate(e.target.value)\n        }\n      />\n    </Modal>\n  );\n};\n\nexport default NewProjectModal;\n","import React, { FC, useState, ChangeEvent, MouseEvent } from \"react\";\nimport {\n  Typography,\n  Grid,\n  makeStyles,\n  createStyles,\n  Theme,\n} from \"@material-ui/core\";\nimport FilterBar from \"../FilterBar\";\nimport ProjectCard from \"../Cards/ProjectCard\";\nimport FloatingButton from \"../Buttons/FloatingButton\";\nimport NewProjectModal from \"../Modals/NewProjectModal\";\nimport Project from \"../../types/Project\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    header: {\n      paddingBottom: theme.spacing(2),\n    },\n    addButton: {\n      position: \"relative\",\n      marginLeft: \"20px\",\n    },\n  })\n);\n\ntype IProps = {\n  projects: Project[];\n};\n\nconst ProjectList: FC<IProps> = ({ projects }) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const clearFilterText: (e: MouseEvent) => void = (e: MouseEvent) => {\n    setFilterText(\"\");\n  };\n  const [showNew, setShowNew] = useState(false);\n  const onClick = (e: MouseEvent): void => {\n    e.preventDefault();\n    setShowNew(true);\n  };\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setFilterText(e.target.value);\n  };\n\n  let filteredProjects = projects.filter(\n    (t) =>\n      t.status !== \"Done\" &&\n      t.title.toLowerCase().includes(filterText.toLowerCase())\n  );\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <NewProjectModal\n        handleClose={() => {\n          setShowNew(false);\n        }}\n        show={showNew}\n      />\n      <Grid container>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n          className={classes.header}\n        >\n          <Typography variant=\"h4\" component=\"h4\">\n            Projects\n            <span className={classes.addButton}>\n              <FloatingButton color=\"primary\" size=\"small\" onClick={onClick} />\n            </span>\n          </Typography>\n          <FilterBar\n            filterText={filterText}\n            handleChange={handleChange}\n            clearFilterText={clearFilterText}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <div className=\"col s12 grey lighten-1\">\n            {filteredProjects.length === 0 ? (\n              <ProjectCard />\n            ) : (\n              filteredProjects.map((t: Project) => (\n                <ProjectCard\n                  key={t.id}\n                  title={t.title}\n                  remainingDays={t.endingDate}\n                  link={`/projects/${t.id}`}\n                  members={t.users}\n                  progress={t.progression}\n                  ticketsNumber={t.tickets === undefined ? 0 : t.tickets.length}\n                  ticketsDone={\n                    t.tickets === undefined\n                      ? 0\n                      : t.tickets.filter((t) => t.status === \"Done\").length\n                  }\n                />\n              ))\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ProjectList;\n","import React, { FC, useState, ReactNode } from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport { AppBar, Box, Tab, Tabs, Typography } from \"@material-ui/core\";\nimport ProjectList from \"../Lists/ProjectList\";\nimport TicketList from \"../Lists/TicketList\";\nimport Ticket from \"../../types/Ticket\";\nimport Project from \"../../types/Project\";\n\ninterface TabProps {\n  children?: ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nconst TabPanel: FC<TabProps> = (props: TabProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n};\n\nconst a11yProps = (index: any) => {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: \"#E9ECEF\",\n    borderRadius: \"20px\",\n  },\n  topbar: { borderTopLeftRadius: \"10px\", borderTopRightRadius: \"10px\" },\n}));\n\ninterface IProps {\n  tabNames: string[];\n  tickets: Ticket[];\n  projects: Project[];\n}\n\nconst UserTabPanel: FC<IProps> = ({ tickets, tabNames, projects }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"inherit\" className={classes.topbar}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs\"\n        >\n          {tabNames.map((t: string, i: number) => (\n            <Tab key={i} label={t} {...a11yProps({ i })} />\n          ))}\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <ProjectList projects={projects} />\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <TicketList tickets={tickets} allProjects={[]} addButton={false} />\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n};\nexport default UserTabPanel;\n","import React, { FC } from \"react\";\nimport { UserVM } from \"../VM/UserVM\";\nimport UserHeader from \"../components/UserHeader\";\nimport UserTabPanel from \"../components/Panels/UserTabPanel\";\nimport PageLayout from \"../layouts/PageLayout\";\n\ninterface IProps {\n  viewModel: UserVM;\n}\n\nconst UserPage: FC<IProps> = ({ viewModel }) => {\n  const { fullName, presentation, picture, projects, tickets } = viewModel;\n  const tabNames: string[] = [\"Projects\", \"Tickets\"];\n\n  return (\n    <PageLayout\n      header={\n        <UserHeader\n          picture={picture}\n          fullName={fullName}\n          presentation={presentation}\n        />\n      }\n      content={\n        <UserTabPanel\n          tabNames={tabNames}\n          projects={projects}\n          tickets={tickets}\n        />\n      }\n    />\n  );\n};\n\nexport default UserPage;\n","import Activity from \"../types/Activity\";\nimport Project from \"../types/Project\";\nimport Ticket from \"../types/Ticket\";\nimport User from \"../types/User\";\n\nexport class UserVM {\n  public id: string;\n  public firstName: string;\n  public lastName: string;\n  public fullName: string;\n  public presentation: string;\n  public email: string;\n  public phone: string;\n  public creationDate: string;\n  public picture: string;\n  public projects: Project[];\n  public tickets: Ticket[];\n  public activities: Activity[];\n\n  public constructor(user: User) {\n    this.id = user.id;\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.fullName = user.fullName;\n    this.presentation = user.presentation;\n    this.email = user.email;\n    this.phone = user.phone;\n    this.creationDate = user.creationDate;\n    this.picture = user.picture;\n    this.projects = user.projects;\n    this.tickets = user.tickets;\n    this.activities = user.activities;\n  }\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorController from \"./ErrorController\";\nimport UserPage from \"../pages/UserPage\";\nimport { UserVM } from \"../VM/UserVM\";\nimport User from \"../types/User\";\nimport Preloader from \"../components/Preloader\";\nimport { UserService } from \"../services\";\nimport { useAuth0 } from \"../authentication/auth0\";\nimport { getUID } from \"../authentication/helpers\";\n\nconst UserController: FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [account, setAccount] = useState<User>({} as User);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n  const { getTokenSilently, user } = useAuth0();\n\n  useEffect(() => {\n    const getUser = async (id: string): Promise<void> => {\n      const token = await getTokenSilently();\n      const Users = new UserService(token);\n      let response: User | undefined;\n\n      try {\n        response = await Users.get(id);\n      } catch (ex) {\n        if (ex === \"Not Found\") {\n          // create user\n          const { given_name, family_name, email, nickname, picture } = user;\n          const newUser: User = {\n            id: getUID(user),\n            firstName: given_name,\n            lastName: family_name,\n            fullName: `${given_name} ${family_name}`,\n            email,\n            presentation: nickname,\n            picture,\n            phone: \"\",\n            creationDate: Date.now().toLocaleString(),\n            activities: [],\n            projects: [],\n            tickets: [],\n          };\n          response = await Users.add(newUser);\n        } else {\n          setHasError(true);\n          setError(ex);\n        }\n      } finally {\n        if (response !== undefined) {\n          setAccount(response);\n          setIsLoading(false);\n        }\n      }\n    };\n\n    if (id !== undefined) {\n      getUser(id);\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id, getTokenSilently, user]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new UserVM(account);\n  return isLoading ? <Preloader /> : <UserPage viewModel={viewModel} />;\n};\n\nexport default UserController;\n","import React, { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, Theme, Grid, Typography } from \"@material-ui/core\";\nimport { Timer } from \"@material-ui/icons\";\nimport TicketVM from \"../VM/TicketVM\";\nimport PageLayout from \"../layouts/PageLayout\";\nimport Header from \"../components/Header\";\nimport AvatarList from \"../components/Avatars/AvatarList\";\nimport TicketChipsArray from \"../components/Cards/TicketChipsArray\";\nimport getRemainingdays from \"../utils/methods\";\n\ninterface IProps {\n  viewModel: TicketVM;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    margin: \"auto\",\n    maxWidth: 650,\n    alignItems: \"center\",\n  },\n  subtitle: {\n    marginTop: 20,\n  },\n}));\n\nconst TicketPage: FC<IProps> = ({ viewModel }) => {\n  const {\n    title,\n    description,\n    users,\n    endingDate,\n    project,\n    status,\n    category,\n    impact,\n    difficulty,\n  } = viewModel;\n  const daysToEnd: number = getRemainingdays(endingDate);\n  // let notes: string = \"\";\n  const classes = useStyles();\n\n  const Content: FC = () => {\n    return (\n      <>\n        <AvatarList users={users} />\n\n        <div className={classes.root}>\n          <Grid container>\n            <Grid item xs={9}>\n              <Typography\n                variant=\"h5\"\n                component=\"h5\"\n                className={classes.subtitle}\n              >\n                <b>Project: </b>\n                <Link to={`/projects/${project.id}`}>{project.title}</Link>\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Timer /> <span>Due in {daysToEnd} days</span>\n            </Grid>\n          </Grid>\n        </div>\n\n        <div className={classes.table}>\n          {/* <InfoTable\n            status={status}\n            category={category}\n            impact={impact}\n            difficulty={difficulty}\n          /> */}\n          <TicketChipsArray\n            status={status}\n            category={category}\n            impact={impact}\n            difficulty={difficulty}\n          />\n          {/* <textarea\n      id=\"notes\"\n      className=\"materialize-textarea validate\"\n      value={notes}\n      // onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n      //   setDescription(e.target.value)\n      // }\n    ></textarea> */}\n        </div>\n      </>\n    );\n  };\n  return (\n    <PageLayout\n      header={<Header title={title} description={description} />}\n      content={<Content />}\n    />\n  );\n};\n\n// interface InfoProps {\n//   status: string;\n//   category: string;\n//   impact: string;\n//   difficulty: string;\n// }\n\n// const InfoTable: FC<InfoProps> = (info: InfoProps) => {\n//   const classes = useStyles();\n\n//   return (\n//     <TableContainer component={Paper}>\n//       <Table className={classes.table} aria-label=\"simple table\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>Status</TableCell>\n//             <TableCell>Category</TableCell>\n//             <TableCell>Impact</TableCell>\n//             <TableCell>Difficulty</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           <TableRow>\n//             <TableCell>{info.status}</TableCell>\n//             <TableCell>{info.category}</TableCell>\n//             <TableCell>{info.impact}</TableCell>\n//             <TableCell>{info.difficulty}</TableCell>\n//           </TableRow>\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// };\n\nexport default TicketPage;\n","import Project from \"../types/Project\";\nimport Ticket from \"../types/Ticket\";\nimport User from \"../types/User\";\n\nexport default class TicketVM {\n  public id: number;\n  public title: string;\n  public description: string;\n  public creationDate: string;\n  public endingDate: string;\n  public status: string;\n  public impact: string;\n  public difficulty: string;\n  public category: string;\n  public creatorId: string;\n  public project: Project;\n  public users: User[];\n\n  public constructor(ticket: Ticket) {\n    this.id = ticket.id;\n    this.title = ticket.title;\n    this.description = ticket.description;\n    this.creationDate = ticket.creationDate;\n    this.endingDate = ticket.endingDate;\n    this.status = ticket.status;\n    this.impact = ticket.impact;\n    this.difficulty = ticket.difficulty;\n    this.category = ticket.category;\n    this.creatorId = ticket.creatorId;\n    this.project = ticket.project;\n    this.users = ticket.users;\n  }\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ErrorController from \"./ErrorController\";\nimport TicketPage from \"../pages/TicketPage\";\nimport TicketVM from \"../VM/TicketVM\";\nimport Ticket from \"../types/Ticket\";\nimport Preloader from \"../components/Preloader\";\nimport { useAuth0 } from \"../authentication/auth0\";\nimport { TicketService } from \"../services\";\n\nconst TicketController: FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [ticket, setTicket] = useState<Ticket>({} as Ticket);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n  const { getTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    const getTicket = async (id: string): Promise<void> => {\n      const token = await getTokenSilently();\n      try {\n        const Tickets = new TicketService(token);\n        const response: Ticket = await Tickets.get(id);\n        if (response !== undefined) {\n          setTicket(response);\n          setIsLoading(false);\n        }\n      } catch (ex) {\n        setHasError(true);\n        setError(ex);\n      }\n    };\n\n    if (id !== undefined) {\n      getTicket(id);\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id, getTokenSilently]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new TicketVM(ticket);\n  return isLoading ? <Preloader /> : <TicketPage viewModel={viewModel} />;\n};\n\nexport default TicketController;\n","import React, { FC } from \"react\";\nimport PageLayout from \"../layouts/PageLayout\";\nimport Header from \"../components/Header\";\n\nconst NotFoundPage: FC = () => {\n  return (\n    <PageLayout\n      header={<Header title=\"Error page\" description=\"Something went wrong\" />}\n      content={<p>error</p>}\n    />\n  );\n};\n\nexport default NotFoundPage;\n","import React, { useState, FC } from \"react\";\nimport { useAuth0 } from \"../authentication/auth0\";\nimport { UserService } from \"../services\";\nimport User from \"../types/User\";\n\nconst TestPage: FC = () => {\n  const [showResult, setShowResult] = useState(false);\n  const [apiMessage, setApiMessage] = useState(\"\");\n  const { getTokenSilently } = useAuth0();\n  const [user, setUser] = useState<User>();\n\n  const callAPI = async () => {\n    try {\n      const token = await getTokenSilently();\n      const Users = new UserService(token);\n\n      const users = await Users.all();\n      const u = await Users.get(\"3418cabc-cf55-4749-b69c-47e7178c219c\");\n\n      setShowResult(true);\n      setApiMessage((users as unknown) as string);\n      setUser(u);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <h1>Users API</h1>\n      <button onClick={callAPI}>Get All Users</button>\n\n      {showResult && <code>{JSON.stringify(apiMessage, null, 2)}</code>}\n    </>\n  );\n};\n\nexport default TestPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport HomeController from \"../controllers/HomeController\";\nimport ProjectController from \"../controllers/ProjectController\";\nimport UserController from \"../controllers/UserController\";\nimport TicketController from \"../controllers/TicketController\";\nimport NotFoundPage from \"../pages/NotFoundPage\";\nimport TestPage from \"../pages/TestPage\";\n// import SigninPage from \"../pages/SigninPage\";\nimport * as ROUTES from \"../constants/routes\";\n\nconst AppRouter = () => {\n  return (\n    <Switch>\n      <PrivateRoute path={ROUTES.TEST} component={TestPage} />\n      <Route exact path={ROUTES.HOME} component={HomeController} />\n      {/* <Route path={ROUTES.SIGN_IN} component={SigninPage} /> */}\n      <PrivateRoute\n        path={`${ROUTES.PROJECTS}/:id`}\n        component={ProjectController}\n      />\n      <PrivateRoute\n        path={`${ROUTES.TICKETS}/:id`}\n        component={TicketController}\n      />\n      <PrivateRoute path={`${ROUTES.USERS}/:id`} component={UserController} />\n      <Route path={ROUTES.NOT_FOUND} component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default AppRouter;\n","import * as createHistory from \"history\";\nconst history = createHistory.createBrowserHistory();\n\nexport default history;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./authentication/auth0\";\nimport config from \"./authentication/config.json\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    audience={config.audience}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport { useAuth0 } from \"./authentication/auth0\";\nimport MainLayout from \"./layouts/MainLayout\";\nimport AppRouter from \"./routes/AppRouter\";\nimport history from \"./utils/history\";\nimport Preloader from \"./components/Preloader\";\n\nexport default function App() {\n  const { loading } = useAuth0();\n\n  return loading ? (\n    <Preloader />\n  ) : (\n    <Router history={history}>\n      <MainLayout>\n        <AppRouter />\n      </MainLayout>\n    </Router>\n  );\n}\n"],"sourceRoot":""}