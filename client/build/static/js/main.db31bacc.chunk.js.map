{"version":3,"sources":["components/InputField.tsx","components/PasswordField.tsx","components/Button.tsx","components/LogInForm.tsx","components/Avatar.tsx","components/ProfileSelector.tsx","pages/HomePage.tsx","controllers/HomeController.tsx","controllers/ErrorController.tsx","components/Header.tsx","components/AvatarList.tsx","components/ProgressBar.tsx","components/TabRouterHeader.tsx","components/FloatingButton.tsx","utils/methods.ts","components/HorizontalCard.tsx","components/FilterBar.tsx","utils/http.ts","utils/Constants.ts","components/Modal.tsx","components/NewTicketForm.tsx","components/NewTicketModal.tsx","components/TicketList.tsx","components/FileCollection.tsx","components/InputFile.tsx","components/AppFileList.tsx","components/TabRouter.tsx","components/UsersModalEntry.tsx","components/UsersModal.tsx","pages/ProjectPage.tsx","VM/ProjectVM.ts","components/Preloader.tsx","controllers/ProjectController.tsx","components/UserHeader.tsx","components/ProjectList.tsx","components/UserTabRouter.tsx","pages/UserPage.tsx","VM/UserVM.ts","controllers/UserController.tsx","pages/TicketPage.tsx","VM/TicketVM.ts","controllers/TicketController.tsx","pages/NotFoundPage.tsx","utils/router.tsx","authentication/auth0.tsx","components/Navbar.tsx","pages/Layout.tsx","App.tsx","serviceWorker.ts","utils/history.ts","index.jsx"],"names":["InputField","className","id","type","htmlFor","PasswordField","Button","size","shape","color","onClick","children","LogInForm","Avatar","picture","src","height","width","alt","ProfileSelector","to","HomePage","HomeController","ErrorController","error","Header","title","description","AvatarList","users","undefined","map","user","i","key","fullName","ProgressBar","value","tasksDone","max","tasksTotalCount","remainingDays","styleString","barColor","style","TabRouterHeader","tabNames","tabClass","length","useState","isActive","setIsActive","nTabs","name","text","toString","left","right","TabUnit","url","useRouteMatch","parseInt","FloatingButton","icon","iconComponent","getRemainingdays","endDate","endingDate","Date","today","Math","abs","getDate","HorizontalCard","link","validateTicket","FilterBar","filterText","handleChange","clearFilterText","placeholder","split","required","onChange","http","request","a","fetch","response","json","parsedBody","ok","statusText","get","path","args","method","headers","Request","post","body","JSON","stringify","put","patch","Headers","Accept","Authorization","Constants","projectsURI","ticketsURI","usersURI","Modal","handleClose","show","showHideStyle","display","zIndex","NewTicketForm","setTitle","setDescription","setEndingDate","allProjects","projectId","setProjectId","e","target","preventDefault","disabled","p","NewTicketModal","handleSubmit","newTicket","toISOString","creatorId","onSubmit","TicketList","tickets","addButton","setFilterText","showNew","setShowNew","filteredTickets","filter","t","status","toLowerCase","includes","FileCollection","files","console","log","f","format","file","FileEntry","href","InputFile","action","multiple","accept","FileList","TabRouter","activities","from","UsersModalEntry","setMembers","members","match","Boolean","find","m","defaultChecked","UsersModal","allUsers","useParams","u","ProjectPage","viewModel","progression","ticketsDone","ticketsTotalCount","showModal","setShowModal","ProjectVM","project","creationDate","manager","this","Preloader","ProjectController","setProject","setAllUsers","setAllProjects","isLoading","setIsLoading","hasError","setHasError","setError","useEffect","httpGetProjects","httpGetAllUsers","httpGetAllProjects","UserHeader","presentation","ProjectList","projects","UserTabRouter","UserPage","UserVM","firstName","lastName","email","phone","UserController","setUser","httpGetUser","TicketPage","category","impact","difficulty","daysToEnd","TicketVM","ticket","TicketController","setTicket","httpGetTicket","NotFoundPage","history","creacteHistory","AppRouter","exact","DEFAULT_REDIRECT_CALLBACK","window","replaceState","document","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","NavBar","isAuthenticated","loginWithRedirect","logout","Layout","App","loading","hostname","createBrowserHistory","ReactDOM","render","onRedirectCallback","initOptions","setIsAuthenticated","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","o","result","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","push","targetUrl","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db31bacc.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nexport const InputField: FC = () => {\n  return (\n    <div className=\"input-field\">\n      <input id=\"email\" type=\"text\" className=\"validate\" />\n      <label htmlFor=\"email\">Email</label>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\n\nexport const PasswordField: FC = () => {\n  return (\n    <div className=\"input-field\">\n      <input id=\"password\" type=\"password\" className=\"validate\" />\n      <label htmlFor=\"password\">Password</label>\n    </div>\n  );\n};\n","import React, { FC, MouseEvent } from \"react\";\n\ninterface IProps {\n  icon?: string;\n  size?: string;\n  shape?: string;\n  color?: string;\n  text?: string;\n  onClick?: (e: MouseEvent) => void;\n}\n\nexport const Button: FC<IProps> = ({\n  size = \"small\",\n  shape = \"\",\n  color,\n  onClick,\n  children\n}) => {\n  return (\n    <button\n      className={`waves-effect waves-light btn-${size} ${shape} ${color}`}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, { FC } from \"react\";\nimport { InputField } from \"./InputField\";\nimport { PasswordField } from \"./PasswordField\";\nimport { Button } from \"./Button\";\n\nexport const LogInForm: FC = () => {\n  return (\n    <div className=\"section col s10 offset-s1 white z-depth-1\">\n      <div className=\"row \">\n        <div className=\"center \">\n          <h4>Login</h4>\n          <form className=\"col s10 offset-s1\">\n            <InputField />\n            <PasswordField />\n            <Button color=\"indigo\" size=\"large\">\n              Submit\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\n\ninterface IProps {\n  picture: string;\n}\nexport const Avatar: FC<IProps> = ({ picture }) => {\n  return (\n    <>\n      <img\n        className=\"circle\"\n        src={picture}\n        height=\"100vh\"\n        width=\"100vh\"\n        alt=\"user avatar\"\n      />\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { HorizontalCard } from \"./HorizontalCard\";\nimport { Avatar } from \"./Avatar\";\nimport { Link } from \"react-router-dom\";\n\nexport const ProfileSelector: FC = () => {\n  return (\n    <div className=\"section col s10 offset-s1 white z-depth-1\">\n      <div className=\"row \">\n        <div className=\"center \">\n          <h4>Select a profile</h4>\n          <Link to=\"/users/cd179eb7-3a54-4060-b22c-3e947bdffcbc\">\n            <Avatar picture=\"https://vignette.wikia.nocookie.net/jamescameronsavatar/images/0/08/Neytiri_Profilbild.jpg/revision/latest/scale-to-width-down/250?cb=20100107164021&path-prefix=de\" />\n          </Link>\n          <h5>Demo User</h5>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { LogInForm } from \"../components/LogInForm\";\nimport { ProfileSelector } from \"../components/ProfileSelector\";\n\nexport const HomePage: React.FC = () => {\n  return (\n    <div className=\"section\">\n      <div className=\"container center\">\n        <h1 className=\"center\">Ticket Manager</h1>\n        <div className=\"row\">\n          <div className=\"col s6\">\n            <ProfileSelector />\n          </div>\n          <div className=\"col s6\">\n            <LogInForm />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { HomePage } from \"../pages/HomePage\";\n\nexport const HomeController: FC = () => {\n  return <HomePage />;\n};\n","import React, { FC } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\ninterface IProps {\n  error: string;\n}\n\nexport const ErrorController: FC<IProps> = ({ error }) => {\n  switch (error) {\n    case \"Bad Request\":\n      return <Redirect to=\"/400\" />;\n\n    case \"Unauthorized\":\n      return <Redirect to=\"/401\" />;\n\n    case \"Not Found\":\n      return <Redirect to=\"/404\" />;\n\n    default:\n      return <Redirect to=\"/404\" />;\n  }\n};\n","import React, { FC } from \"react\";\n\ntype HeaderProps = {\n  title: string;\n  description: string;\n};\n\nexport const Header: FC<HeaderProps> = ({ title, description }) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      <p className=\"lead\">{description}</p>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { User } from \"../types/User\";\nimport { Link } from \"react-router-dom\";\n\ninterface AvatarListProps {\n  users: User[];\n}\n\nexport const AvatarList: FC<AvatarListProps> = ({ users }) => {\n  return users === undefined ? (\n    <></>\n  ) : (\n    <>\n      {users.map((user: User, i: number) => (\n        <Link to={`/users/${user.id}`} key={i}>\n          <img\n            className=\"circle\"\n            src={user.picture}\n            width=\"32vh\"\n            height=\"32vh\"\n            alt={user.fullName}\n          />\n        </Link>\n      ))}\n    </>\n  );\n};\n","import React, { FC, CSSProperties } from \"react\";\n\ntype ProgressBarProps = {\n  value: number;\n  max?: number;\n  tasksTotalCount?: number;\n  tasksDone?: number;\n  remainingDays?: number;\n};\n\nexport const ProgressBar: FC<ProgressBarProps> = ({\n  value,\n  max = 100,\n  tasksDone,\n  tasksTotalCount,\n  remainingDays\n}) => {\n  const styleString: CSSProperties = { width: `${value}%` };\n  let barColor: string = \"green\";\n\n  if (value < 100) {\n    barColor = \"yellow\";\n  }\n  if (value < 200 / 3) {\n    barColor = \"orange\";\n  }\n  if (value < 100 / 3) {\n    barColor = \"red\";\n  }\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"progress\">\n          <div className={`determinate ${barColor}`} style={styleString}></div>\n        </div>\n        <div>\n          <i className=\"left material-icons\">playlist_add_check</i>\n          <span>\n            {tasksDone}/{tasksTotalCount}\n          </span>\n          <div className=\"right\">\n            <span>Due {remainingDays} days</span>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\ninterface IProps {\n  tabClass?: string;\n  tabNames: string[];\n}\n\nexport const TabRouterHeader: FC<IProps> = ({\n  tabNames,\n  tabClass = `tab col s${12 / tabNames.length}`\n}) => {\n  const [isActive, setIsActive] = useState(0);\n  const nTabs = tabNames.length;\n\n  return (\n    <>\n      <ul className=\"tabs\">\n        {tabNames.map((name, i) => (\n          <TabUnit\n            key={i}\n            text={name}\n            value={i.toString()}\n            tabClass={tabClass}\n            isActive={isActive}\n            setIsActive={setIsActive}\n            nTabs={nTabs}\n          />\n        ))}\n        <li\n          className=\"indicator indigo lighten-2\"\n          style={{\n            left: `${(isActive / nTabs) * 100}%`,\n            right: `${(1 - (isActive + 1) / nTabs) * 100}%`\n          }}\n        ></li>\n      </ul>\n    </>\n  );\n};\n\ninterface TabUnitProps {\n  tabClass: string;\n  isActive: number;\n  setIsActive: React.Dispatch<React.SetStateAction<number>>;\n  text: string;\n  value: string;\n  nTabs: number;\n}\n\nconst TabUnit: FC<TabUnitProps> = ({\n  tabClass,\n  isActive,\n  setIsActive,\n  text,\n  value,\n  nTabs\n}) => {\n  const { url } = useRouteMatch();\n  return (\n    <li\n      className={tabClass}\n      key={value}\n      style={{\n        left: `${(isActive / nTabs) * 100}%`,\n        right: `${(1 - (isActive + 1) / nTabs) * 100}%`\n      }}\n    >\n      <Link\n        to={`${url}/${text}`}\n        id={value}\n        className={\n          isActive === parseInt(value)\n            ? \"active indigo lighten-5 indigo-text\"\n            : \"indigo-text\"\n        }\n        onClick={() => setIsActive(parseInt(value))}\n      >\n        {text}\n      </Link>\n    </li>\n  );\n};\n","import React, { FC, MouseEvent } from \"react\";\nimport { Button } from \"./Button\";\n\ninterface IProps {\n  icon?: string;\n  size?: string;\n  color?: string;\n  onClick?: (e: MouseEvent) => void;\n}\n\nexport const FloatingButton: FC<IProps> = ({\n  icon = \"add\",\n  size = \"small\",\n  color = \"red\",\n  onClick\n}) => {\n  const iconComponent = <i className=\"material-icons left\">{icon}</i>;\n  return (\n    <Button color={color} size={size} shape=\"btn-floating\" onClick={onClick}>\n      {iconComponent}\n    </Button>\n  );\n};\n","export const getRemainingdays: (endDate: string) => number = (\n  endDate: string\n) => {\n  let endingDate: Date = new Date(endDate);\n  let today: Date = new Date();\n  return Math.abs(endingDate.getDate() - today.getDate());\n};\n","import React, { FC, MouseEvent } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRemainingdays } from \"../utils/methods\";\n\ninterface IProps {\n  title?: string;\n  remainingDays?: string;\n  validateTicket?: (event: MouseEvent) => void;\n  link?: string;\n}\n\nexport const HorizontalCard: FC<IProps> = ({\n  title,\n  remainingDays,\n  link = \"#\",\n  validateTicket\n}) => {\n  return (\n    <li>\n      <div className=\"card horizontal\">\n        <div className=\"card-stacked\">\n          <div className=\"card-content\">\n            <div className=\"row\">\n              <div className=\"card-title\">\n                <h6>\n                  <Link to={link}>\n                    <b>{title ?? \"Nothing to do\"}</b>\n                  </Link>\n                </h6>\n              </div>\n              <span>\n                Due{\" \"}\n                {remainingDays ? (\n                  getRemainingdays(remainingDays)\n                ) : (\n                  <span>\n                    <del>Too much</del> 0\n                  </span>\n                )}{\" \"}\n                days\n              </span>\n              <div className=\"right\">\n                <Link to=\"#\">\n                  <i className=\"material-icons\" onClick={validateTicket}>\n                    check\n                  </i>\n                </Link>\n                {/* <Link to=\"#\">\n                <i className=\"material-icons\" onClick={archiveTicket}>\n                  archive\n                </i>\n              </Link> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n","import React, { FC, ChangeEvent, MouseEvent } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\n\ntype IProps = {\n  filterText: string;\n  handleChange: (e: ChangeEvent<HTMLInputElement>) => void;\n  clearFilterText: (e: MouseEvent<HTMLInputElement>) => void;\n};\n\nexport const FilterBar: FC<IProps> = ({\n  filterText,\n  handleChange,\n  clearFilterText\n}) => {\n  const { url } = useRouteMatch();\n  const placeholder: string = url.split(\"/\")[3] || \"users\";\n  return (\n    <>\n      <div className=\"nav-wrapper\">\n        <div className=\"input-field\">\n          <input\n            //   className=\"validate\"\n            id=\"filter\"\n            type=\"search\"\n            required\n            name=\"filter\"\n            value={filterText}\n            placeholder={`Filter ${placeholder}`}\n            onChange={handleChange}\n          />\n          <label className=\"label-icon\" htmlFor=\"search\">\n            <i className=\"material-icons\">filter_list</i>\n          </label>\n          <i className=\"material-icons\" onClick={clearFilterText}>\n            close\n          </i>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { HttpResponse } from \"../types/HttpResponse\";\n\nexport async function http<T>(request: RequestInfo): Promise<HttpResponse<T>> {\n  const response: HttpResponse<T> = await fetch(request);\n  try {\n    response.parsedBody = await response.json();\n  } catch (ex) {}\n  if (!response.ok) {\n    throw response.statusText;\n  }\n  return response;\n}\n\nexport async function get<T>(\n  path: string,\n  args: RequestInit = { method: \"get\", headers: headers }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n}\n\nexport async function post<T>(\n  path: string,\n  body: any,\n  args: RequestInit = {\n    method: \"post\",\n    headers: headers,\n    body: JSON.stringify(body)\n  }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n}\n\nexport async function put<T>(\n  path: string,\n  body: any,\n  args: RequestInit = {\n    method: \"put\",\n    headers: headers,\n    body: JSON.stringify(body)\n  }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n}\n\nexport async function patch<T>(\n  path: string,\n  body: any,\n  args: RequestInit = {\n    method: \"patch\",\n    headers: headers,\n    body: JSON.stringify(body)\n  }\n): Promise<HttpResponse<T>> {\n  return await http<T>(new Request(path, args));\n}\n\nconst headers: Headers = new Headers({\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\",\n  Authorization:\n    \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik1UWkNSRFEzUkRnd1FUQXlNRFExTmtOQ09UQXlSamhGTURaRU1Ea3pNRGxHUkRrelFqZENSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1meWpydm9oeC5hdXRoMC5jb20vIiwic3ViIjoiR3dlZTlGUnN3ejNWNE5vZFVRTjJIcjJyQjJTMDI1UmZAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vbG9jYWxob3N0OjUwMDEvYXBpL1YxLyIsImlhdCI6MTU4NDE5ODQ4MCwiZXhwIjoxNTg0Mjg0ODgwLCJhenAiOiJHd2VlOUZSc3d6M1Y0Tm9kVVFOMkhyMnJCMlMwMjVSZiIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.I1D49ILGBLhnq9biIA0y6Ra93zTKRDJI_rfGvU05MtT1zkI1ZliX9P-7LyKeWBv8tPonB6gT12lJiai_GHBET8kKbXNqwfVvDJ3eqYK-TtTqfL65RfWL9tQfQybHbfuF9M0oiXMqWMqmsc5Umpp4a3bLTQgwkUEKxcdMm84L7zoaqMycns4mFojWpQJKfPa64oZFDIXYy6hPDXcX50Djuk1m-aqMhtpmqkZvPfwEjvtEtGGCTOJHV7uugn3r8Wk4HX02ShrV676GICE1Yw7eHufAbY7yvHz3ImZ1cfEVrRbbijPA2vogXd5RmqNyindDDlT1Y_C80U0DyvhS7P7apQ\"\n});\n","export class Constants {\n  static projectsURI: string = \"/api/v1/projects\";\n  static ticketsURI: string = \"/api/v1/tickets\";\n  static usersURI: string = \"/api/v1/users\";\n}\n","import React, { FC, CSSProperties } from \"react\";\n\ninterface IProps {\n  handleClose: () => void;\n  show: boolean;\n}\nexport const Modal: FC<IProps> = ({ handleClose, show, children }) => {\n  const showHideStyle: CSSProperties = show\n    ? { display: \"block\", zIndex: 10 }\n    : { display: \"none\", zIndex: 10 };\n  return (\n    <div className=\"modal\" style={showHideStyle}>\n      <div className=\"modal-content\">{children}</div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Project } from \"../types/Project\";\n\ninterface IProps {\n  title: string;\n  setTitle: React.Dispatch<React.SetStateAction<string>>;\n  description: string;\n  setDescription: React.Dispatch<React.SetStateAction<string>>;\n  endingDate: string;\n  setEndingDate: React.Dispatch<React.SetStateAction<string>>;\n  allProjects: Project[];\n  projectId: string;\n  setProjectId: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport const NewTicketForm: FC<IProps> = ({\n  title,\n  setTitle,\n  description,\n  setDescription,\n  endingDate,\n  setEndingDate,\n  allProjects,\n  projectId,\n  setProjectId\n}) => {\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"input-field\">\n          <i className=\"material-icons prefix\">note_add</i>\n          <input\n            id=\"title\"\n            type=\"text\"\n            className=\"validate\"\n            value={title}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setTitle(e.target.value)\n            }\n          />\n          <label htmlFor=\"title\">Title</label>\n        </div>\n\n        <div className=\"input-field\">\n          <i className=\"material-icons prefix\">mode_edit</i>\n          <textarea\n            id=\"description\"\n            className=\"materialize-textarea validate\"\n            value={description}\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n              setDescription(e.target.value)\n            }\n          ></textarea>\n          <label htmlFor=\"description\">Description</label>\n        </div>\n\n        <div className=\"input-field\">\n          <i className=\"material-icons prefix\">date_range</i>\n          <input\n            id=\"Due Date\"\n            type=\"text\"\n            className=\"datepicker\"\n            value={endingDate}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setEndingDate(e.target.value)\n            }\n          />\n          <label htmlFor=\"Due Date\">Due Date</label>\n        </div>\n\n        <div className=\"input-field\">\n          <select\n            id=\"project\"\n            className=\"browser-default\"\n            value={projectId}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n              e.preventDefault();\n              setProjectId(e.target.value);\n            }}\n          >\n            <option value={0} disabled>\n              Project\n            </option>\n            {allProjects.map(p => (\n              <option key={p.id} value={p.id}>\n                {p.title}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { FC, useState, FormEvent } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Modal } from \"./Modal\";\nimport { NewTicketForm } from \"./NewTicketForm\";\nimport { Ticket } from \"../types/Ticket\";\nimport { Project } from \"../types/Project\";\nimport { post } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\n// import { HttpResponse } from \"../types/HttpResponse\";\n\ninterface IProps {\n  show: boolean;\n  handleClose(): void;\n  allProjects: Project[];\n}\n\nexport const NewTicketModal: FC<IProps> = ({\n  show,\n  handleClose,\n  allProjects\n}) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [endingDate, setEndingDate] = useState(\"\");\n\n  const { url } = useRouteMatch();\n  const id = url.split(\"/\")[2];\n  const [projectId, setProjectId] = useState(id);\n\n  const handleSubmit: (event: FormEvent<HTMLFormElement>) => void = async (\n    e: FormEvent\n  ) => {\n    e.preventDefault();\n    let newTicket = {\n      title: title,\n      description: description,\n      endingDate: new Date(endingDate).toISOString(),\n      creatorId: \"20bf4b2a-7209-4826-96cd-29c2bc937a94\",\n      projectId: parseInt(projectId)\n    };\n\n    // const response: HttpResponse<Ticket> =\n    await post<Ticket>(`${Constants.ticketsURI}`, newTicket);\n    handleClose();\n  };\n\n  return (\n    <Modal show={show} handleClose={handleClose}>\n      <div className=\"row valign-wrapper indigo\">\n        <div className=\"col s10\">\n          <h4 className=\"white-text\">New Ticket</h4>\n        </div>\n\n        <div className=\"col s2\">\n          <i\n            className=\"right material-icons indigo lighten-3 circle\"\n            onClick={handleClose}\n          >\n            close\n          </i>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"row\">\n          <NewTicketForm\n            title={title}\n            setTitle={setTitle}\n            description={description}\n            setDescription={setDescription}\n            endingDate={endingDate}\n            setEndingDate={setEndingDate}\n            allProjects={allProjects}\n            projectId={projectId}\n            setProjectId={setProjectId}\n          />\n        </div>\n\n        <div className=\"modal-footer grey lighten-3\">\n          <input\n            type=\"submit\"\n            className=\"modal-close waves-effect waves-green btn indigo\"\n            value=\"Create Task\"\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import React, { FC, useState, ChangeEvent, MouseEvent } from \"react\";\nimport { Ticket } from \"../types/Ticket\";\nimport { FloatingButton } from \"./FloatingButton\";\nimport { HorizontalCard } from \"./HorizontalCard\";\nimport { FilterBar } from \"./FilterBar\";\nimport { HttpResponse } from \"../types/HttpResponse\";\nimport { put } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\nimport { NewTicketModal } from \"./NewTicketModal\";\nimport { Project } from \"../types/Project\";\n\ntype TicketListProps = {\n  tickets: Ticket[];\n  allProjects: Project[];\n  addButton?: Boolean;\n};\n\nexport const TicketList: FC<TicketListProps> = ({\n  tickets,\n  allProjects,\n  addButton = true\n}) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const clearFilterText: (e: MouseEvent) => void = (e: MouseEvent) => {\n    setFilterText(\"\");\n  };\n\n  const onClick: (e: MouseEvent) => void = (e: MouseEvent) => {\n    e.preventDefault();\n    setShowNew(true);\n  };\n  const handleChange: (e: ChangeEvent<HTMLInputElement>) => void = (\n    e: ChangeEvent<HTMLInputElement>\n  ) => {\n    setFilterText(e.target.value);\n  };\n\n  const [showNew, setShowNew] = useState(false);\n  let filteredTickets = tickets.filter(\n    t =>\n      t.status !== \"Done\" &&\n      t.title.toLowerCase().includes(filterText.toLowerCase())\n  );\n  return (\n    <>\n      <div className=\"row valign-wrapper\">\n        <NewTicketModal\n          handleClose={() => {\n            setShowNew(false);\n          }}\n          show={showNew}\n          allProjects={allProjects}\n        />\n        <h3>Tickets</h3>\n        {addButton && (\n          <FloatingButton\n            color=\"indigo lighten-3\"\n            size=\"small\"\n            onClick={onClick}\n          />\n        )}\n        <FilterBar\n          filterText={filterText}\n          handleChange={handleChange}\n          clearFilterText={clearFilterText}\n        />\n      </div>\n      <div className=\"col s12 grey lighten-1\">\n        <ul>\n          {filteredTickets.length === 0 ? (\n            <HorizontalCard />\n          ) : (\n            filteredTickets.map((t: Ticket) => (\n              <HorizontalCard\n                key={t.id}\n                title={t.title}\n                remainingDays={t.endingDate}\n                link={`/tickets/${t.id}`}\n                validateTicket={async (e: MouseEvent) => {\n                  e.preventDefault();\n                  await put<HttpResponse<Ticket>>(\n                    `${Constants.ticketsURI}/${t.id}/closed`,\n                    {}\n                  );\n                }}\n              />\n            ))\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { AppFile } from \"../types/AppFile\";\n\ntype IProps = {\n  files: AppFile[];\n  filterText: string;\n};\n\nexport const FileCollection: FC<IProps> = ({ files, filterText }) => {\n  console.log();\n  return (\n    <>\n      <ul className=\"collection\">\n        {files.length === 0 ? (\n          <FileEntry />\n        ) : (\n          files\n            .filter(\n              f =>\n                f.name.toLowerCase().includes(filterText.toLowerCase()) ||\n                f.format.toLowerCase().includes(filterText.toLowerCase())\n            )\n            .map((file: AppFile) => <FileEntry file={file} key={file.id} />)\n        )}\n      </ul>\n    </>\n  );\n};\n\ntype IFProps = {\n  file?: AppFile;\n};\n\nexport const FileEntry: FC<IFProps> = ({ file }) => {\n  return (\n    <li className=\"collection-item avatar\">\n      {/* <img src={require(\"../images/user_1.jpg\")} alt=\"\" className=\"circle\" /> */}\n      <i className=\"material-icons circle indigo lighten-1\">folder</i>\n      <span className=\"title\">{file ? file.name : \"Add your first file\"}</span>\n      <p>\n        {file ? file.size : 0}kb {file ? file.format : \"pdf\"}\n      </p>\n      <a href=\"#!\" className=\"secondary-content\">\n        <i className=\"material-icons\">more_vert</i>\n      </a>\n    </li>\n  );\n};\n","import React, { FC } from \"react\";\n\ntype IProps = {};\n\nexport const InputFile: FC<IProps> = () => {\n  return (\n    <>\n      <form action=\"/upload\">\n        <div className=\"file-field input-field\">\n          <div className=\"btn indigo lighten-1\">\n            <i className=\"material-icons \">cloud_upload</i>\n            <input\n              type=\"file\"\n              multiple\n              accept=\".doc,.docx,.pdf,.md,.gdoc,.zip,image/*\"\n            />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input\n              className=\"file-path validate\"\n              type=\"text\"\n              placeholder=\"Upload one or more files\"\n            />\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n","import React, { FC, useState, ChangeEvent, MouseEvent } from \"react\";\nimport { AppFile } from \"../types/AppFile\";\nimport { FileCollection } from \"./FileCollection\";\nimport { InputFile } from \"./InputFile\";\nimport { FilterBar } from \"./FilterBar\";\n\ntype IProps = {\n  files: AppFile[];\n};\n\nexport const FileList: FC<IProps> = ({ files }) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const clearFilterText: (e: MouseEvent) => void = (e: MouseEvent) => {\n    setFilterText(\"\");\n  };\n  const handleChange: (e: ChangeEvent<HTMLInputElement>) => void = (\n    e: ChangeEvent<HTMLInputElement>\n  ) => {\n    setFilterText(e.target.value);\n  };\n  return (\n    <>\n      <div className=\"row valign-wrapper\">\n        <h3>Files</h3>\n        <FilterBar\n          filterText={filterText}\n          handleChange={handleChange}\n          clearFilterText={clearFilterText}\n        />\n      </div>\n      <InputFile />\n      <FileCollection files={files} filterText={filterText} />\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Route, useRouteMatch, Redirect } from \"react-router-dom\";\nimport { TabRouterHeader } from \"./TabRouterHeader\";\nimport { TicketList } from \"./TicketList\";\nimport { FileList } from \"./AppFileList\";\n// import { ActivityList } from \"./ActivityList\";\nimport { Ticket } from \"../types/Ticket\";\nimport { AppFile } from \"../types/AppFile\";\nimport { Activity } from \"../types/Activity\";\nimport { Project } from \"../types/Project\";\n\ninterface IProps {\n  tickets: Ticket[];\n  remainingDays?: number;\n  tabNames: string[];\n  files: AppFile[];\n  activities: Activity[];\n  allProjects: Project[];\n}\n\nexport const TabRouter: FC<IProps> = ({\n  tickets,\n  tabNames,\n  files,\n  activities,\n  allProjects\n}) => {\n  const { url } = useRouteMatch();\n\n  return (\n    <>\n      <div className=\"row\">\n        <TabRouterHeader tabNames={tabNames} />\n\n        <Redirect from={url} to={`${url}/tickets`} />\n\n        <Route path={`${url}/tickets`}>\n          <TicketList tickets={tickets} allProjects={allProjects} />\n        </Route>\n\n        <Route path={`${url}/files`}>\n          <FileList files={files} />\n        </Route>\n\n        {/* <Route path={`${url}/activity`}>\n          <ActivityList activities={activities} />\n        </Route> */}\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { User } from \"../types/User\";\n\ninterface IProps {\n  setMembers: React.Dispatch<React.SetStateAction<User[]>>;\n  members: User[];\n  user: User;\n}\n\nexport const UsersModalEntry: FC<IProps> = ({ user, setMembers, members }) => {\n  const match: (id: string) => boolean = (id: string) => {\n    return Boolean(members.find(m => m.id === id));\n  };\n  return (\n    <div className=\"valign-wrapper\">\n      <label htmlFor={user.id}>\n        <input\n          id={user.id}\n          name={user.fullName}\n          type=\"checkbox\"\n          defaultChecked={match(user.id)}\n          onChange={() => {\n            !match(user.id)\n              ? setMembers([...members, user])\n              : setMembers(members.filter(p => p.id !== user.id));\n          }}\n        />\n        <span>\n          {user.fullName}\n          {\"  \"}\n        </span>\n      </label>\n      <img\n        className=\"circle\"\n        src={user.picture}\n        width=\"32vh\"\n        height=\"32vh\"\n        alt={user.fullName}\n      />\n    </div>\n  );\n};\n","import React, { FC, useState, ChangeEvent, FormEvent, useEffect } from \"react\";\nimport { Modal } from \"./Modal\";\nimport { AvatarList } from \"./AvatarList\";\nimport { User } from \"../types/User\";\nimport { FilterBar } from \"./FilterBar\";\nimport { patch } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\nimport { UsersModalEntry } from \"./UsersModalEntry\";\nimport { useParams } from \"react-router-dom\";\n\ninterface IProps {\n  show: boolean;\n  users: User[];\n  allUsers: User[];\n  handleClose(): void;\n}\n\nexport const UsersModal: FC<IProps> = ({\n  show,\n  handleClose,\n  users,\n  allUsers\n}) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const [members, setMembers] = useState<User[]>(users);\n  const { id } = useParams();\n\n  const handleChange: (e: ChangeEvent<HTMLInputElement>) => void = (\n    e: ChangeEvent<HTMLInputElement>\n  ) => {\n    setFilterText(e.target.value);\n  };\n\n  const handleSubmit: (event: FormEvent<HTMLFormElement>) => void = async (\n    e: FormEvent\n  ) => {\n    e.preventDefault();\n    await patch<User[]>(\n      `${Constants.projectsURI}/${id}/members`,\n      members.map(m => m.id)\n    );\n    handleClose();\n  };\n\n  return (\n    <Modal show={show} handleClose={handleClose}>\n      <div className=\"row valign-wrapper indigo\">\n        <div className=\"col s10\">\n          <h4 className=\"white-text\">Manage users</h4>\n        </div>\n        <div className=\"col s2\">\n          <i\n            className=\"right material-icons indigo lighten-3 circle\"\n            onClick={handleClose}\n          >\n            close\n          </i>\n        </div>\n      </div>\n      <div className=\"center\">\n        <AvatarList users={users} />\n        <FilterBar\n          filterText={filterText}\n          clearFilterText={() => setFilterText(\"\")}\n          handleChange={handleChange}\n        />\n      </div>\n\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {allUsers.map((u: User) => (\n            <li key={u.id}>\n              <UsersModalEntry\n                user={u}\n                members={members}\n                setMembers={setMembers}\n              />\n            </li>\n          ))}\n        </ul>\n        <div className=\"modal-footer grey lighten-3\">\n          <input\n            type=\"submit\"\n            className=\"modal-close waves-effect waves-green btn indigo\"\n            value=\"Done\"\n          />\n        </div>\n      </form>\n    </Modal>\n  );\n};\n","import React, { FC, useState } from \"react\";\nimport ProjectVM from \"../VM/ProjectVM\";\nimport { Header } from \"../components/Header\";\nimport { AvatarList } from \"../components/AvatarList\";\nimport { ProgressBar } from \"../components/ProgressBar\";\nimport { TabRouter } from \"../components/TabRouter\";\nimport { FloatingButton } from \"../components/FloatingButton\";\nimport { UsersModal } from \"../components/UsersModal\";\n\ninterface IProps {\n  viewModel: ProjectVM;\n}\n\nexport const ProjectPage: FC<IProps> = ({ viewModel }) => {\n  const {\n    // id,\n    title,\n    description,\n    users,\n    allUsers,\n    progression,\n    tickets,\n    ticketsDone,\n    ticketsTotalCount,\n    remainingDays,\n    files,\n    activities,\n    allProjects\n  } = viewModel;\n\n  const tabNames: string[] = [\"Tickets\", \"Files\"]; //, \"Activity\"];\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <Header title={title} description={description} />\n        <div className=\"row valign-wrapper\">\n          <AvatarList users={users} />\n          <FloatingButton\n            icon=\"add\"\n            color=\"indigo lighten-3\"\n            size=\"small\"\n            onClick={() => setShowModal(true)}\n          />\n          <UsersModal\n            show={showModal}\n            users={users}\n            allUsers={allUsers}\n            handleClose={() => setShowModal(false)}\n          />\n        </div>\n        <ProgressBar\n          value={progression}\n          tasksDone={ticketsDone}\n          tasksTotalCount={ticketsTotalCount}\n          remainingDays={remainingDays}\n        />\n        <TabRouter\n          tabNames={tabNames}\n          tickets={tickets}\n          files={files}\n          activities={activities}\n          allProjects={allProjects}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Ticket } from \"../types/Ticket\";\nimport { Project } from \"../types/Project\";\nimport { AppFile } from \"../types/AppFile\";\nimport { Activity } from \"../types/Activity\";\nimport { User } from \"../types/User\";\nimport { getRemainingdays } from \"../utils/methods\";\n\nexport default class ProjectVM {\n  public id: number;\n  public title: string;\n  public description: string;\n  public creationDate: string;\n  public endingDate: string;\n  public progression: number;\n  public status: string;\n  public manager: User;\n  public users: User[];\n  public tickets: Ticket[];\n  public files: AppFile[];\n  public activities: Activity[];\n  public allUsers: User[];\n  public ticketsTotalCount: number;\n  public ticketsDone: number;\n  public remainingDays: number;\n  public allProjects: Project[];\n\n  public constructor(\n    project: Project,\n    allUsers: User[],\n    allProjects: Project[]\n  ) {\n    this.id = project.id;\n    this.title = project.title;\n    this.description = project.description;\n    this.creationDate = project.creationDate;\n    this.endingDate = project.endingDate;\n    this.progression = project.progression;\n    this.status = project.status;\n    this.manager = project.manager;\n    this.users = project.users;\n    this.tickets = project.tickets;\n    this.files = project.files;\n    this.activities = project.activities;\n    this.allUsers = allUsers;\n    this.ticketsTotalCount =\n      this.tickets === undefined ? 0 : this.tickets.length;\n    this.ticketsDone =\n      this.tickets === undefined\n        ? 0\n        : this.tickets.filter(t => t.status === \"Done\").length;\n    this.remainingDays = getRemainingdays(project.endingDate);\n    this.allProjects = allProjects;\n  }\n}\n","import React, { FC } from \"react\";\n\nexport const Preloader: FC = () => {\n  return (\n    <div className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-red\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-yellow\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n\n      <div className=\"spinner-layer spinner-green\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ErrorController } from \"./ErrorController\";\nimport { ProjectPage } from \"../pages/ProjectPage\";\nimport ProjectVM from \"../VM/ProjectVM\";\nimport { Project } from \"../types/Project\";\nimport { HttpResponse } from \"../types/HttpResponse\";\nimport { Preloader } from \"../components/Preloader\";\nimport { Constants } from \"../utils/Constants\";\nimport { get } from \"../utils/http\";\nimport { User } from \"../types/User\";\n\nexport const ProjectController: FC = () => {\n  const [project, setProject] = useState<Project>({} as Project);\n  const [allUsers, setAllUsers] = useState<User[]>([]);\n  const [allProjects, setAllProjects] = useState<Project[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n\n  async function httpGetProjects(id: string): Promise<void> {\n    try {\n      const response: HttpResponse<Project> = await get<Project>(\n        `${Constants.projectsURI}/${id}`\n      );\n      if (response.parsedBody !== undefined) {\n        setProject(response.parsedBody);\n        setIsLoading(false);\n      }\n    } catch (ex) {\n      console.error(ex);\n      setHasError(true);\n      setError(ex);\n    }\n  }\n\n  async function httpGetAllUsers(): Promise<void> {\n    try {\n      const response: HttpResponse<User> = await get<User>(\n        `${Constants.usersURI}`\n      );\n      if (response.parsedBody !== undefined) {\n        setAllUsers((response.parsedBody as unknown) as User[]);\n      }\n    } catch (ex) {\n      setHasError(true);\n      setError(ex);\n    }\n  }\n\n  async function httpGetAllProjects(): Promise<void> {\n    try {\n      const response: HttpResponse<Project> = await get<Project>(\n        `${Constants.projectsURI}`\n      );\n      if (response.parsedBody !== undefined) {\n        setAllProjects((response.parsedBody as unknown) as Project[]);\n      }\n    } catch (ex) {\n      setHasError(true);\n      setError(ex);\n    }\n  }\n\n  useEffect(() => {\n    if (id !== undefined) {\n      httpGetProjects(id);\n      httpGetAllUsers();\n      httpGetAllProjects();\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new ProjectVM(project, allUsers, allProjects);\n  return isLoading ? <Preloader /> : <ProjectPage viewModel={viewModel} />;\n};\n","import React, { FC } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { Avatar } from \"../components/Avatar\";\n\ninterface IProps {\n  fullName: string;\n  presentation: string;\n  picture: string;\n}\nexport const UserHeader: FC<IProps> = ({ fullName, presentation, picture }) => {\n  return (\n    <div className=\"row valign-wrapper\">\n      <div className=\"col s2\">\n        <Avatar picture={picture} />\n      </div>\n      <div className=\"col s10\">\n        <Header title={fullName} description={presentation} />\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useState, ChangeEvent, MouseEvent } from \"react\";\nimport { Ticket } from \"../types/Ticket\";\nimport { HorizontalCard } from \"./HorizontalCard\";\nimport { FilterBar } from \"./FilterBar\";\nimport { put } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\nimport { HttpResponse } from \"../types/HttpResponse\";\nimport { Project } from \"../types/Project\";\n\ntype IProps = {\n  projects: Project[];\n};\n\nexport const ProjectList: FC<IProps> = ({ projects }) => {\n  const [filterText, setFilterText] = useState<string>(\"\");\n  const clearFilterText: (e: MouseEvent) => void = (e: MouseEvent) => {\n    setFilterText(\"\");\n  };\n\n  const handleChange: (e: ChangeEvent<HTMLInputElement>) => void = (\n    e: ChangeEvent<HTMLInputElement>\n  ) => {\n    setFilterText(e.target.value);\n  };\n\n  let filteredTickets = projects.filter(\n    t =>\n      t.status !== \"Done\" &&\n      t.title.toLowerCase().includes(filterText.toLowerCase())\n  );\n  return (\n    <>\n      <div className=\"row valign-wrapper\">\n        <h3>Projects</h3>\n        <FilterBar\n          filterText={filterText}\n          handleChange={handleChange}\n          clearFilterText={clearFilterText}\n        />\n      </div>\n      <div className=\"col s12 grey lighten-1\">\n        <ul>\n          {filteredTickets.length === 0 ? (\n            <HorizontalCard />\n          ) : (\n            filteredTickets.map((t: Project) => (\n              <HorizontalCard\n                key={t.id}\n                title={t.title}\n                remainingDays={t.endingDate}\n                link={`/projects/${t.id}`}\n                validateTicket={async (e: MouseEvent) => {\n                  e.preventDefault();\n                  await put<HttpResponse<Ticket>>(\n                    `${Constants.ticketsURI}/${t.id}/closed`,\n                    {}\n                  );\n                }}\n              />\n            ))\n          )}\n        </ul>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Route, useRouteMatch, Redirect } from \"react-router-dom\";\nimport { TabRouterHeader } from \"./TabRouterHeader\";\nimport { ProjectList } from \"./ProjectList\";\nimport { Ticket } from \"../types/Ticket\";\nimport { Project } from \"../types/Project\";\nimport { TicketList } from \"./TicketList\";\n\ninterface IProps {\n  tabNames: string[];\n  tickets: Ticket[];\n  projects: Project[];\n}\n\nexport const UserTabRouter: FC<IProps> = ({ tickets, tabNames, projects }) => {\n  const { url } = useRouteMatch();\n\n  return (\n    <>\n      <div className=\"row\">\n        <TabRouterHeader tabNames={tabNames} />\n\n        <Redirect from={url} to={`${url}/projects`} />\n\n        <Route path={`${url}/projects`}>\n          <ProjectList projects={projects} />\n        </Route>\n\n        <Route path={`${url}/tickets`}>\n          <TicketList tickets={tickets} allProjects={[]} addButton={false} />\n        </Route>\n      </div>\n    </>\n  );\n};\n","import React, { FC } from \"react\";\nimport { UserVM } from \"../VM/UserVM\";\nimport { UserHeader } from \"../components/UserHeader\";\nimport { UserTabRouter } from \"../components/UserTabRouter\";\n\ninterface IProps {\n  viewModel: UserVM;\n}\nexport const UserPage: FC<IProps> = ({ viewModel }) => {\n  const { fullName, presentation, picture, projects, tickets } = viewModel;\n  const tabNames: string[] = [\"Projects\", \"Tickets\"];\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <UserHeader\n          picture={picture}\n          fullName={fullName}\n          presentation={presentation}\n        />\n        <UserTabRouter\n          tabNames={tabNames}\n          projects={projects}\n          tickets={tickets}\n        />\n      </div>\n    </div>\n  );\n};\n","import { Project } from \"../types/Project\";\nimport { Ticket } from \"../types/Ticket\";\nimport { User } from \"../types/User\";\nimport { Activity } from \"../types/Activity\";\n\nexport class UserVM {\n  public id: string;\n  public firstName: string;\n  public lastName: string;\n  public fullName: string;\n  public presentation: string;\n  public email: string;\n  public phone: string;\n  public creationDate: string;\n  public picture: string;\n  public projects: Project[];\n  public tickets: Ticket[];\n  public activities: Activity[];\n\n  public constructor(user: User) {\n    this.id = user.id;\n    this.firstName = user.firstName;\n    this.lastName = user.lastName;\n    this.fullName = user.fullName;\n    this.presentation = user.presentation;\n    this.email = user.email;\n    this.phone = user.phone;\n    this.creationDate = user.creationDate;\n    this.picture = user.picture;\n    this.projects = user.projects;\n    this.tickets = user.tickets;\n    this.activities = user.activities;\n  }\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserPage } from \"../pages/UserPage\";\nimport { UserVM } from \"../VM/UserVM\";\nimport { User } from \"../types/User\";\nimport { HttpResponse } from \"../types/HttpResponse\";\nimport { Preloader } from \"../components/Preloader\";\nimport { get } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\nimport { ErrorController } from \"./ErrorController\";\n\nexport const UserController: FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>({} as User);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n\n  async function httpGetUser(id: string): Promise<void> {\n    try {\n      const response: HttpResponse<User> = await get<User>(\n        `${Constants.usersURI}/${id}`\n      );\n      if (response.parsedBody !== undefined) {\n        setUser(response.parsedBody);\n        setIsLoading(false);\n      }\n    } catch (ex) {\n      console.error(ex);\n      setHasError(true);\n      setError(ex);\n    }\n  }\n\n  useEffect(() => {\n    if (id !== undefined) {\n      httpGetUser(id);\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new UserVM(user);\n  return isLoading ? <Preloader /> : <UserPage viewModel={viewModel} />;\n};\n","import React, { FC } from \"react\";\nimport { Header } from \"../components/Header\";\nimport { AvatarList } from \"../components/AvatarList\";\nimport { TicketVM } from \"../VM/TicketVM\";\nimport { getRemainingdays } from \"../utils/methods\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  viewModel: TicketVM;\n}\n\nexport const TicketPage: FC<IProps> = ({ viewModel }) => {\n  const {\n    title,\n    description,\n    users,\n    endingDate,\n    project,\n    status,\n    category,\n    impact,\n    difficulty\n  } = viewModel;\n  const daysToEnd: number = getRemainingdays(endingDate);\n  // let notes: string = \"\";\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <Header title={title} description={description} />\n        <AvatarList users={users} />\n\n        <div className=\"row section\">\n          <div className=\"col s9\">\n            <h5>\n              <b>In project: </b>{\" \"}\n              <Link to={`/projects/${project.id}`}>{project.title}</Link>\n            </h5>\n          </div>\n          <div className=\"col s3\">\n            <i className=\"left material-icons\">timer</i>\n            <span>Due in {daysToEnd} days</span>\n          </div>\n        </div>\n\n        <div className=\"section white center\">\n          <div className=\"chip\">\n            <span className=\"indigo-text\">Status: </span> {status}\n            {/* <i className=\"close material-icons\">close</i> */}\n          </div>\n\n          <div className=\"chip\">\n            <span className=\"orange-text\">Category: </span> {category}\n            {/* <i className=\"close material-icons\">close</i> */}\n          </div>\n\n          <div className=\"chip\">\n            <span className=\"green-text\">Impact: </span> {impact}\n            {/* <i className=\"close material-icons\">close</i> */}\n          </div>\n\n          <div className=\"chip\">\n            <span className=\"red-text\">Difficulty: </span> {difficulty}\n            {/* <i className=\"close material-icons\">close</i> */}\n          </div>\n\n          {/* <textarea\n            id=\"notes\"\n            className=\"materialize-textarea validate\"\n            value={notes}\n            // onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n            //   setDescription(e.target.value)\n            // }\n          ></textarea> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Ticket } from \"../types/Ticket\";\nimport { Project } from \"../types/Project\";\nimport { User } from \"../types/User\";\n\nexport class TicketVM {\n  public id: number;\n  public title: string;\n  public description: string;\n  public creationDate: string;\n  public endingDate: string;\n  public status: string;\n  public impact: string;\n  public difficulty: string;\n  public category: string;\n  public creatorId: string;\n  public project: Project;\n  public users: User[];\n\n  public constructor(ticket: Ticket) {\n    this.id = ticket.id;\n    this.title = ticket.title;\n    this.description = ticket.description;\n    this.creationDate = ticket.creationDate;\n    this.endingDate = ticket.endingDate;\n    this.status = ticket.status;\n    this.impact = ticket.impact;\n    this.difficulty = ticket.difficulty;\n    this.category = ticket.category;\n    this.creatorId = ticket.creatorId;\n    this.project = ticket.project;\n    this.users = ticket.users;\n  }\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { TicketPage } from \"../pages/TicketPage\";\nimport { ErrorController } from \"./ErrorController\";\nimport { HttpResponse } from \"../types/HttpResponse\";\nimport { Preloader } from \"../components/Preloader\";\nimport { get } from \"../utils/http\";\nimport { Constants } from \"../utils/Constants\";\nimport { Ticket } from \"../types/Ticket\";\nimport { TicketVM } from \"../VM/TicketVM\";\n\nexport const TicketController: FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [ticket, setTicket] = useState<Ticket>({} as Ticket);\n  const [hasError, setHasError] = useState(false);\n  const [error, setError] = useState(\"\");\n  const { id } = useParams();\n\n  async function httpGetTicket(id: string): Promise<void> {\n    try {\n      const response: HttpResponse<Ticket> = await get<Ticket>(\n        `${Constants.ticketsURI}/${id}`\n      );\n      if (response.parsedBody !== undefined) {\n        setTicket(response.parsedBody);\n        setIsLoading(false);\n      }\n    } catch (ex) {\n      console.error(ex);\n      setHasError(true);\n      setError(ex);\n    }\n  }\n\n  useEffect(() => {\n    if (id !== undefined) {\n      httpGetTicket(id);\n    } else {\n      setHasError(true);\n      setError(\"Bad Request\");\n    }\n  }, [id]);\n\n  if (hasError) {\n    return <ErrorController error={error} />;\n  }\n\n  const viewModel = new TicketVM(ticket);\n  return isLoading ? <Preloader /> : <TicketPage viewModel={viewModel} />;\n};\n","import React, { FC } from \"react\";\n\ninterface IProps {}\nexport const NotFoundPage: FC<IProps> = () => {\n  return (\n    <div className=\"section\">\n      <p>error</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport * as creacteHistory from \"history\";\nimport { HomeController } from \"../controllers/HomeController\";\nimport { ProjectController } from \"../controllers/ProjectController\";\nimport { UserController } from \"../controllers/UserController\";\nimport { TicketController } from \"../controllers/TicketController\";\nimport { NotFoundPage } from \"../pages/NotFoundPage\";\n// import { TestPage } from \"../pages/TestPage\";\n\nexport const history = creacteHistory.createBrowserHistory();\n\nexport const AppRouter = () => {\n  return (\n    <Router history={history}>\n      <div className=\"grey lighten-3\">\n        <Switch>\n          {/* <Route exact path=\"/\">\n            <TestPage />\n          </Route> */}\n\n          <Route exact path=\"/\">\n            <HomeController />\n          </Route>\n\n          <Route path=\"/users/:id\">\n            <UserController />\n          </Route>\n\n          <Route path=\"/projects/:id\">\n            <ProjectController />\n          </Route>\n\n          <Route path=\"/tickets/:id\">\n            <TicketController />\n          </Route>\n\n          <Route path=\"/404\">\n            <NotFoundPage />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React, { useState, useEffect, useContext, FC } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\nimport Auth0Client from \"@auth0/auth0-spa-js/dist/typings/Auth0Client\";\n\ninterface IAuth0Context {\n  isAuthenticated: boolean;\n  user: any;\n  loading: boolean;\n  popupOpen: boolean;\n  loginWithPopup(options: PopupLoginOptions): Promise<void>;\n  handleRedirectCallback(): Promise<RedirectLoginResult>;\n  getIdTokenClaims(o?: getIdTokenClaimsOptions): Promise<IdToken>;\n  loginWithRedirect(o: RedirectLoginOptions): Promise<void>;\n  getTokenSilently(o?: GetTokenSilentlyOptions): Promise<string | undefined>;\n  getTokenWithPopup(o?: GetTokenWithPopupOptions): Promise<string | undefined>;\n  logout(o?: LogoutOptions): void;\n}\nexport interface IAuth0ProviderOptions {\n  children: React.ReactElement;\n  onRedirectCallback?(result: RedirectLoginResult): void;\n}\n\nconst DEFAULT_REDIRECT_CALLBACK: () => void = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context: React.Context<IAuth0Context | null> = React.createContext<IAuth0Context | null>(\n  null\n);\nexport const useAuth0: () => IAuth0Context = () => useContext(Auth0Context)!;\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}: IAuth0ProviderOptions & Auth0ClientOptions) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState<Auth0Client>();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (window.location.search.includes(\"code=\")) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (o: PopupLoginOptions) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client!.loginWithPopup(o);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client!.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    const result = await auth0Client!.handleRedirectCallback();\n    const user = await auth0Client!.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n    return result;\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (o: getIdTokenClaimsOptions | undefined) =>\n          auth0Client!.getIdTokenClaims(o),\n        loginWithRedirect: (o: RedirectLoginOptions) =>\n          auth0Client!.loginWithRedirect(o),\n        getTokenSilently: (o: GetTokenSilentlyOptions | undefined) =>\n          auth0Client!.getTokenSilently(o),\n        getTokenWithPopup: (o: GetTokenWithPopupOptions | undefined) =>\n          auth0Client!.getTokenWithPopup(o),\n        logout: (o: LogoutOptions | undefined) => auth0Client!.logout(o)\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React from \"react\";\nimport { useAuth0 } from \"../authentication/auth0\";\n\nexport const NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n  return (\n    <div>\n      {!isAuthenticated && (\n        <button onClick={() => loginWithRedirect({})}>Log in</button>\n      )}\n\n      {isAuthenticated && <button onClick={() => logout()}>Log out</button>}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { AppRouter } from \"../utils/router\";\nimport { NavBar } from \"../components/Navbar\";\n\nconst Layout: FC = () => {\n  return (\n    <>\n      <header>\n        <NavBar />\n      </header>\n      {/* <BreadCrumb /> */}\n      <AppRouter />\n      {/* <Footer /> */}\n    </>\n  );\n};\n\nexport default Layout;\n","import React, { FC } from \"react\";\nimport Layout from \"./pages/Layout\";\nimport { useAuth0 } from \"./authentication/auth0\";\n\nconst App: FC = () => {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Auth0Provider } from \"./authentication/auth0\";\nimport config from \"./authentication/config.json\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={config.domain}\n    client_id={config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}